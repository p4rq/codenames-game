{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import api from'../../services/api';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=_ref=>{let{gameId,username}=_ref;const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[error,setError]=useState('');const chatContainerRef=useRef(null);const fetchMessages=async()=>{try{const data=await api.getMessages(gameId);setMessages(data);setError('');}catch(err){setError('Error loading messages');console.error(err);}};useEffect(()=>{fetchMessages();// Set up polling for new messages\nconst intervalId=setInterval(fetchMessages,3000);return()=>clearInterval(intervalId);},[gameId]);useEffect(()=>{// Scroll to bottom of chat when new messages arrive\nif(chatContainerRef.current){chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;}},[messages]);const handleSendMessage=async e=>{e.preventDefault();if(!newMessage.trim())return;try{await api.sendMessage(gameId,username,newMessage);setNewMessage('');await fetchMessages();}catch(err){setError('Failed to send message');console.error(err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Game Chat\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",ref:chatContainerRef,children:messages.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-messages\",children:\"No messages yet\"}):messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${api.getUserId()===message.sender_id?'my-message':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-username\",children:message.username}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date(message.timestamp).toLocaleTimeString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.content})]},index))}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input\",onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type a message...\",disabled:!username}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!newMessage.trim()||!username,children:\"Send\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"chat-error\",children:error})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","api","jsx","_jsx","jsxs","_jsxs","Chat","_ref","gameId","username","messages","setMessages","newMessage","setNewMessage","error","setError","chatContainerRef","fetchMessages","data","getMessages","err","console","intervalId","setInterval","clearInterval","current","scrollTop","scrollHeight","handleSendMessage","e","preventDefault","trim","sendMessage","className","children","ref","length","map","message","index","getUserId","sender_id","Date","timestamp","toLocaleTimeString","content","onSubmit","type","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport api from '../../services/api';\r\nimport './Chat.css';\r\n\r\nconst Chat = ({ gameId, username }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const chatContainerRef = useRef(null);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const data = await api.getMessages(gameId);\r\n      setMessages(data);\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Error loading messages');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    \r\n    // Set up polling for new messages\r\n    const intervalId = setInterval(fetchMessages, 3000);\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, [gameId]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom of chat when new messages arrive\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n    \r\n    try {\r\n      await api.sendMessage(gameId, username, newMessage);\r\n      setNewMessage('');\r\n      await fetchMessages();\r\n    } catch (err) {\r\n      setError('Failed to send message');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <h3>Game Chat</h3>\r\n      </div>\r\n      \r\n      <div className=\"chat-messages\" ref={chatContainerRef}>\r\n        {messages.length === 0 ? (\r\n          <p className=\"no-messages\">No messages yet</p>\r\n        ) : (\r\n          messages.map((message, index) => (\r\n            <div \r\n              key={index} \r\n              className={`message ${api.getUserId() === message.sender_id ? 'my-message' : ''}`}\r\n            >\r\n              <div className=\"message-header\">\r\n                <span className=\"message-username\">{message.username}</span>\r\n                <span className=\"message-time\">\r\n                  {new Date(message.timestamp).toLocaleTimeString()}\r\n                </span>\r\n              </div>\r\n              <div className=\"message-content\">{message.content}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      \r\n      <form className=\"chat-input\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          disabled={!username}\r\n        />\r\n        <button type=\"submit\" disabled={!newMessage.trim() || !username}>\r\n          Send\r\n        </button>\r\n      </form>\r\n      \r\n      {error && <div className=\"chat-error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}