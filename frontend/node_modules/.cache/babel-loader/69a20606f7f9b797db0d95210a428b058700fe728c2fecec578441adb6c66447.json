{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{Link}from'react-router-dom';import{UserContext}from'../../context/UserContext';import{GameContext}from'../../context/GameContext';import'./style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=_ref=>{let{darkMode,toggleDarkMode,gameId}=_ref;const{user,updateUsername}=useContext(UserContext);const{changeTeam,game}=useContext(GameContext);const[showSettings,setShowSettings]=useState(false);const[newUsername,setNewUsername]=useState((user===null||user===void 0?void 0:user.username)||'');const[teamChangeLoading,setTeamChangeLoading]=useState(false);const[error,setError]=useState(null);// Update username in state when user context changes\nuseEffect(()=>{if(user!==null&&user!==void 0&&user.username){setNewUsername(user.username);}},[user===null||user===void 0?void 0:user.username]);const handleUsernameChange=e=>{e.preventDefault();setError(null);if(newUsername.trim()){updateUsername(newUsername.trim());setShowSettings(false);}else{setError(\"Username cannot be empty\");}};const handleTeamChange=async team=>{if(gameId&&user){setTeamChangeLoading(true);setError(null);try{// For debugging, log all parameters\nconsole.log(\"Changing team with params:\",{gameId,userId:user.id,team});const result=await changeTeam(gameId,user.id,team);if(result){console.log(\"Team changed successfully\");setShowSettings(false);}}catch(err){console.error(\"Error changing team:\",err);setError(\"Failed to change team. Try again later.\");}finally{setTeamChangeLoading(false);}}else{console.error(\"Cannot change team - missing game ID or user\",{gameId,user});setError(\"Cannot change team - game or user information is missing\");}};// Determine text color class based on dark mode\nconst textColorClass=darkMode?'text-light':'text-dark';return/*#__PURE__*/_jsx(\"nav\",{className:`navbar ${darkMode?'dark':'light'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navbar-brand\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",className:textColorClass,children:/*#__PURE__*/_jsx(\"h1\",{children:\"Codenames\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleDarkMode,\"aria-label\":darkMode?'Switch to light mode':'Switch to dark mode',children:darkMode?'‚òÄÔ∏è':'üåô'}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-menu\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`user-menu-button ${textColorClass}`,onClick:()=>setShowSettings(!showSettings),children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:user.username}),user.team&&/*#__PURE__*/_jsx(\"span\",{className:`team-indicator ${user.team}`}),/*#__PURE__*/_jsx(\"span\",{className:\"dropdown-icon\",children:\"\\u25BC\"})]}),showSettings&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown\",children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUsernameChange,className:\"settings-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Change Name\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:newUsername,onChange:e=>setNewUsername(e.target.value),placeholder:\"New username\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"})]})]}),gameId&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Change Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:`team-btn red ${(user===null||user===void 0?void 0:user.team)==='red'?'active':''}`,onClick:()=>handleTeamChange('red'),disabled:teamChangeLoading||(user===null||user===void 0?void 0:user.team)==='red',children:teamChangeLoading&&(user===null||user===void 0?void 0:user.team)!=='red'?'Loading...':'Red Team'}),/*#__PURE__*/_jsx(\"button\",{className:`team-btn blue ${(user===null||user===void 0?void 0:user.team)==='blue'?'active':''}`,onClick:()=>handleTeamChange('blue'),disabled:teamChangeLoading||(user===null||user===void 0?void 0:user.team)==='blue',children:teamChangeLoading&&(user===null||user===void 0?void 0:user.team)!=='blue'?'Loading...':'Blue Team'})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-settings\",onClick:()=>setShowSettings(false),children:\"Close\"})]})]})]})]})});};export default Navbar;","map":{"version":3,"names":["React","useState","useContext","useEffect","Link","UserContext","GameContext","jsx","_jsx","jsxs","_jsxs","Navbar","_ref","darkMode","toggleDarkMode","gameId","user","updateUsername","changeTeam","game","showSettings","setShowSettings","newUsername","setNewUsername","username","teamChangeLoading","setTeamChangeLoading","error","setError","handleUsernameChange","e","preventDefault","trim","handleTeamChange","team","console","log","userId","id","result","err","textColorClass","className","children","to","onClick","onSubmit","htmlFor","type","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Navbar/index.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport './style.css';\r\n\r\nconst Navbar = ({ darkMode, toggleDarkMode, gameId }) => {\r\n  const { user, updateUsername } = useContext(UserContext);\r\n  const { changeTeam, game } = useContext(GameContext);\r\n  \r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [newUsername, setNewUsername] = useState(user?.username || '');\r\n  const [teamChangeLoading, setTeamChangeLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Update username in state when user context changes\r\n  useEffect(() => {\r\n    if (user?.username) {\r\n      setNewUsername(user.username);\r\n    }\r\n  }, [user?.username]);\r\n  \r\n  const handleUsernameChange = (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    if (newUsername.trim()) {\r\n      updateUsername(newUsername.trim());\r\n      setShowSettings(false);\r\n    } else {\r\n      setError(\"Username cannot be empty\");\r\n    }\r\n  };\r\n  \r\n  const handleTeamChange = async (team) => {\r\n    if (gameId && user) {\r\n      setTeamChangeLoading(true);\r\n      setError(null);\r\n      try {\r\n        // For debugging, log all parameters\r\n        console.log(\"Changing team with params:\", {\r\n          gameId,\r\n          userId: user.id,\r\n          team\r\n        });\r\n        \r\n        const result = await changeTeam(gameId, user.id, team);\r\n        if (result) {\r\n          console.log(\"Team changed successfully\");\r\n          setShowSettings(false);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error changing team:\", err);\r\n        setError(\"Failed to change team. Try again later.\");\r\n      } finally {\r\n        setTeamChangeLoading(false);\r\n      }\r\n    } else {\r\n      console.error(\"Cannot change team - missing game ID or user\", { gameId, user });\r\n      setError(\"Cannot change team - game or user information is missing\");\r\n    }\r\n  };\r\n  \r\n  // Determine text color class based on dark mode\r\n  const textColorClass = darkMode ? 'text-light' : 'text-dark';\r\n  \r\n  return (\r\n    <nav className={`navbar ${darkMode ? 'dark' : 'light'}`}>\r\n      <div className=\"navbar-content\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/\" className={textColorClass}>\r\n            <h1>Codenames</h1>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"navbar-actions\">\r\n          <button \r\n            className=\"theme-toggle\" \r\n            onClick={toggleDarkMode} \r\n            aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\r\n          >\r\n            {darkMode ? '‚òÄÔ∏è' : 'üåô'}\r\n          </button>\r\n          \r\n          {user && (\r\n            <div className=\"user-menu\">\r\n              <button \r\n                className={`user-menu-button ${textColorClass}`}\r\n                onClick={() => setShowSettings(!showSettings)}\r\n              >\r\n                <span className=\"username\">{user.username}</span>\r\n                {user.team && (\r\n                  <span className={`team-indicator ${user.team}`}></span>\r\n                )}\r\n                <span className=\"dropdown-icon\">‚ñº</span>\r\n              </button>\r\n              \r\n              {showSettings && (\r\n                <div className=\"settings-dropdown\">\r\n                  {error && <div className=\"error-message\">{error}</div>}\r\n                  \r\n                  {/* Change username */}\r\n                  <form onSubmit={handleUsernameChange} className=\"settings-form\">\r\n                    <label htmlFor=\"username\">Change Name</label>\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={newUsername}\r\n                        onChange={(e) => setNewUsername(e.target.value)}\r\n                        placeholder=\"New username\"\r\n                      />\r\n                      <button type=\"submit\">Save</button>\r\n                    </div>\r\n                  </form>\r\n                  \r\n                  {/* Change team */}\r\n                  {gameId && (\r\n                    <div className=\"team-selection\">\r\n                      <label>Change Team</label>\r\n                      <div className=\"team-buttons\">\r\n                        <button \r\n                          className={`team-btn red ${user?.team === 'red' ? 'active' : ''}`}\r\n                          onClick={() => handleTeamChange('red')}\r\n                          disabled={teamChangeLoading || user?.team === 'red'}\r\n                        >\r\n                          {teamChangeLoading && user?.team !== 'red' ? 'Loading...' : 'Red Team'}\r\n                        </button>\r\n                        <button \r\n                          className={`team-btn blue ${user?.team === 'blue' ? 'active' : ''}`}\r\n                          onClick={() => handleTeamChange('blue')}\r\n                          disabled={teamChangeLoading || user?.team === 'blue'}\r\n                        >\r\n                          {teamChangeLoading && user?.team !== 'blue' ? 'Loading...' : 'Blue Team'}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Close button */}\r\n                  <button \r\n                    className=\"close-settings\"\r\n                    onClick={() => setShowSettings(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}