{"ast":null,"code":"import React,{useState,useEffect,useContext,useRef}from'react';import{UserContext}from'../../context/UserContext';import{GameContext}from'../../context/GameContext';// Add this import\nimport{getMessages,sendMessage}from'../../services/chatService';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=_ref=>{let{gameId,team}=_ref;const{user}=useContext(UserContext);const{game}=useContext(GameContext);// Add this to get game context\nconst[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const messagesEndRef=useRef(null);const[socket,setSocket]=useState(null);const[isConnected,setIsConnected]=useState(false);// Debug log to see the user and team values\nuseEffect(()=>{console.log(\"Chat component user:\",user);console.log(\"Chat component team:\",team);},[user,team]);// TEMPORARY: Force team access for debugging\nuseEffect(()=>{if(user&&!user.team){console.log(\"TEMPORARY: Forcing user team for debug\");localStorage.setItem('user',JSON.stringify({...user,team:'red'}));}},[user]);// Fetch messages on mount and periodically\nuseEffect(()=>{if(!gameId)return;const fetchMessages=async()=>{try{const data=await getMessages(gameId,team);setMessages(data||[]);setError(null);}catch(err){console.error('Failed to load messages:',err);setError('Failed to load messages');}};// Initial fetch\nfetchMessages();// Set up polling\nconst interval=setInterval(fetchMessages,3000);return()=>clearInterval(interval);},[gameId,team]);// Scroll to bottom when messages update\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);const handleSendMessage=async e=>{e.preventDefault();if(!newMessage.trim()||!user||!gameId)return;setLoading(true);try{await sendMessage(newMessage,user.id,user.username,gameId,team);setNewMessage('');// Fetch updated messages\nconst data=await getMessages(gameId,team);setMessages(data||[]);}catch(err){setError('Failed to send message');console.error(err);}finally{setLoading(false);}};// Update the canAccessChat function\nconst canAccessChat=()=>{// Debug logging\nconsole.log(\"canAccessChat check:\",{user,userTeam:user===null||user===void 0?void 0:user.team,chatTeam:team,role:user===null||user===void 0?void 0:user.role});if(!team){// Everyone can access the general chat\nreturn true;}if(!user){// No user means no access to team chats\nreturn false;}// If user doesn't have a team directly, check for team in game players\nlet userTeam=user.team;if(!userTeam&&game&&game.players){// Find the user in the game's players\nconst playerInGame=game.players.find(p=>p.id===user.id);if(playerInGame){userTeam=playerInGame.team;}}if(!userTeam){console.log(\"User has no team - denying access to team chat\");return false;}// Convert to lowercase for case-insensitive comparison\nconst normalizedUserTeam=userTeam.toLowerCase();const normalizedChatTeam=team.toLowerCase();// Spymasters can access all team chats\nif(user.role==='SPYMASTER'){return true;}// Users can only access their own team's chat\nconst hasAccess=normalizedUserTeam===normalizedChatTeam;console.log(`Team comparison: user=${normalizedUserTeam}, chat=${normalizedChatTeam}, access=${hasAccess}`);return hasAccess;};// Fix the WebSocket connection in your Chat or Game component\nconst connectWebSocket=()=>{if(!gameId||!(user!==null&&user!==void 0&&user.id))return;// Use player_id instead of client_id in the WebSocket URL\nconst wsUrl=`ws://${window.location.host}/ws/game?game_id=${gameId}&player_id=${user.id}`;console.log(`Connecting to WebSocket at ${wsUrl}`);// Close any existing connection\nif(socket){console.log(\"Closing WebSocket connection\");socket.close();}// Create new connection\nconst newSocket=new WebSocket(wsUrl);newSocket.onopen=()=>{console.log(\"WebSocket connection established\");setIsConnected(true);};newSocket.onmessage=event=>{try{const data=JSON.parse(event.data);// Handle message based on type\nif(data.type==='chat'){setMessages(prev=>[...prev,data.message]);}else if(data.type==='game_update'){// Update game state\nupdateGameState(data.game);}}catch(err){console.error(\"Error parsing WebSocket message:\",err);}};newSocket.onclose=()=>{console.log(\"WebSocket connection closed\");setIsConnected(false);// Try to reconnect after a delay\nsetTimeout(()=>{console.log(\"Attempting to reconnect WebSocket...\");connectWebSocket();},3000);};newSocket.onerror=error=>{console.log(\"WebSocket error:\",error);};setSocket(newSocket);};return/*#__PURE__*/_jsxs(\"div\",{className:`chat-container ${team?`team-${team.toLowerCase()}`:''}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:team?`${team} Team Chat`:'Game Chat'}),!canAccessChat()?/*#__PURE__*/_jsx(\"p\",{className:\"access-denied\",children:\"You don't have access to this team's chat\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-messages\",children:\"No messages yet\"}):messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.sender_id===(user===null||user===void 0?void 0:user.id)?'own-message':''}`,children:[/*#__PURE__*/_jsxs(\"span\",{className:\"message-username\",children:[msg.username,\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:msg.content}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date(msg.timestamp).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})})]},msg.id||`${msg.sender_id}-${msg.timestamp}`)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"message-form\",onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type a message...\",disabled:loading||!user}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!newMessage.trim()||!user,children:\"Send\"})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","UserContext","GameContext","getMessages","sendMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","_ref","gameId","team","user","game","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","socket","setSocket","isConnected","setIsConnected","console","log","localStorage","setItem","JSON","stringify","fetchMessages","data","err","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","id","username","canAccessChat","userTeam","chatTeam","role","players","playerInGame","find","p","normalizedUserTeam","toLowerCase","normalizedChatTeam","hasAccess","connectWebSocket","wsUrl","window","location","host","close","newSocket","WebSocket","onopen","onmessage","event","parse","type","prev","message","updateGameState","onclose","setTimeout","onerror","className","children","length","map","msg","sender_id","content","Date","timestamp","toLocaleTimeString","hour","minute","ref","onSubmit","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Chat/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { GameContext } from '../../context/GameContext';  // Add this import\r\n\r\nimport { getMessages, sendMessage } from '../../services/chatService';\r\nimport './Chat.css';\r\n\r\nconst Chat = ({ gameId, team }) => {\r\n  const { user } = useContext(UserContext);\r\n  const { game } = useContext(GameContext); // Add this to get game context\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  \r\n  // Debug log to see the user and team values\r\n  useEffect(() => {\r\n    console.log(\"Chat component user:\", user);\r\n    console.log(\"Chat component team:\", team);\r\n  }, [user, team]);\r\n  \r\n  // TEMPORARY: Force team access for debugging\r\n  useEffect(() => {\r\n    if (user && !user.team) {\r\n      console.log(\"TEMPORARY: Forcing user team for debug\");\r\n      localStorage.setItem('user', JSON.stringify({...user, team: 'red'}));\r\n    }\r\n  }, [user]);\r\n  \r\n  // Fetch messages on mount and periodically\r\n  useEffect(() => {\r\n    if (!gameId) return;\r\n    \r\n    const fetchMessages = async () => {\r\n      try {\r\n        const data = await getMessages(gameId, team);\r\n        setMessages(data || []);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Failed to load messages:', err);\r\n        setError('Failed to load messages');\r\n      }\r\n    };\r\n    \r\n    // Initial fetch\r\n    fetchMessages();\r\n    \r\n    // Set up polling\r\n    const interval = setInterval(fetchMessages, 3000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [gameId, team]);\r\n  \r\n  // Scroll to bottom when messages update\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newMessage.trim() || !user || !gameId) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      await sendMessage(newMessage, user.id, user.username, gameId, team);\r\n      setNewMessage('');\r\n      \r\n      // Fetch updated messages\r\n      const data = await getMessages(gameId, team);\r\n      setMessages(data || []);\r\n    } catch (err) {\r\n      setError('Failed to send message');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update the canAccessChat function\r\n\r\n  const canAccessChat = () => {\r\n    // Debug logging\r\n    console.log(\"canAccessChat check:\", {\r\n      user,\r\n      userTeam: user?.team,\r\n      chatTeam: team,\r\n      role: user?.role\r\n    });\r\n    \r\n    if (!team) {\r\n      // Everyone can access the general chat\r\n      return true;\r\n    }\r\n    \r\n    if (!user) {\r\n      // No user means no access to team chats\r\n      return false;\r\n    }\r\n    \r\n    // If user doesn't have a team directly, check for team in game players\r\n    let userTeam = user.team;\r\n    if (!userTeam && game && game.players) {\r\n      // Find the user in the game's players\r\n      const playerInGame = game.players.find(p => p.id === user.id);\r\n      if (playerInGame) {\r\n        userTeam = playerInGame.team;\r\n      }\r\n    }\r\n    \r\n    if (!userTeam) {\r\n      console.log(\"User has no team - denying access to team chat\");\r\n      return false;\r\n    }\r\n    \r\n    // Convert to lowercase for case-insensitive comparison\r\n    const normalizedUserTeam = userTeam.toLowerCase();\r\n    const normalizedChatTeam = team.toLowerCase();\r\n    \r\n    // Spymasters can access all team chats\r\n    if (user.role === 'SPYMASTER') {\r\n      return true;\r\n    }\r\n    \r\n    // Users can only access their own team's chat\r\n    const hasAccess = normalizedUserTeam === normalizedChatTeam;\r\n    console.log(`Team comparison: user=${normalizedUserTeam}, chat=${normalizedChatTeam}, access=${hasAccess}`);\r\n    return hasAccess;\r\n  };\r\n\r\n  // Fix the WebSocket connection in your Chat or Game component\r\n  const connectWebSocket = () => {\r\n    if (!gameId || !user?.id) return;\r\n  \r\n    // Use player_id instead of client_id in the WebSocket URL\r\n    const wsUrl = `ws://${window.location.host}/ws/game?game_id=${gameId}&player_id=${user.id}`;\r\n    console.log(`Connecting to WebSocket at ${wsUrl}`);\r\n    \r\n    // Close any existing connection\r\n    if (socket) {\r\n      console.log(\"Closing WebSocket connection\");\r\n      socket.close();\r\n    }\r\n    \r\n    // Create new connection\r\n    const newSocket = new WebSocket(wsUrl);\r\n    \r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket connection established\");\r\n      setIsConnected(true);\r\n    };\r\n    \r\n    newSocket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        // Handle message based on type\r\n        if (data.type === 'chat') {\r\n          setMessages(prev => [...prev, data.message]);\r\n        } else if (data.type === 'game_update') {\r\n          // Update game state\r\n          updateGameState(data.game);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error parsing WebSocket message:\", err);\r\n      }\r\n    };\r\n    \r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket connection closed\");\r\n      setIsConnected(false);\r\n      \r\n      // Try to reconnect after a delay\r\n      setTimeout(() => {\r\n        console.log(\"Attempting to reconnect WebSocket...\");\r\n        connectWebSocket();\r\n      }, 3000);\r\n    };\r\n    \r\n    newSocket.onerror = (error) => {\r\n      console.log(\"WebSocket error:\", error);\r\n    };\r\n    \r\n    setSocket(newSocket);\r\n  };\r\n\r\n  return (\r\n    <div className={`chat-container ${team ? `team-${team.toLowerCase()}` : ''}`}>\r\n      <h3>{team ? `${team} Team Chat` : 'Game Chat'}</h3>\r\n      \r\n      {!canAccessChat() ? (\r\n        <p className=\"access-denied\">You don't have access to this team's chat</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"messages-container\">\r\n            {messages.length === 0 ? (\r\n              <p className=\"no-messages\">No messages yet</p>\r\n            ) : (\r\n              messages.map((msg) => (\r\n                <div \r\n                  key={msg.id || `${msg.sender_id}-${msg.timestamp}`} \r\n                  className={`message ${msg.sender_id === user?.id ? 'own-message' : ''}`}\r\n                >\r\n                  <span className=\"message-username\">{msg.username}:</span>\r\n                  <span className=\"message-content\">{msg.content}</span>\r\n                  <span className=\"message-time\">\r\n                    {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                </div>\r\n              ))\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n            \r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n          \r\n          <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              disabled={loading || !user}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading || !newMessage.trim() || !user}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}