{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';// Create context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const UserContext=/*#__PURE__*/createContext();export const UserProvider=_ref=>{let{children}=_ref;// Initialize state with data from localStorage if available\nconst[user,setUser]=useState(()=>{const savedUser=localStorage.getItem('codenames_user');if(savedUser){return JSON.parse(savedUser);}return{id:`user-${Math.random().toString(36).substring(2,9)}`,username:''};});// Save user to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem('codenames_user',JSON.stringify(user));},[user]);// Update username\nconst updateUsername=newUsername=>{setUser(prevUser=>({...prevUser,username:newUsername}));};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user,updateUsername},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","UserContext","UserProvider","_ref","children","user","setUser","savedUser","localStorage","getItem","JSON","parse","id","Math","random","toString","substring","username","setItem","stringify","updateUsername","newUsername","prevUser","Provider","value"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/context/UserContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create context\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  // Initialize state with data from localStorage if available\r\n  const [user, setUser] = useState(() => {\r\n    const savedUser = localStorage.getItem('codenames_user');\r\n    if (savedUser) {\r\n      return JSON.parse(savedUser);\r\n    }\r\n    return { \r\n      id: `user-${Math.random().toString(36).substring(2, 9)}`,\r\n      username: '' \r\n    };\r\n  });\r\n\r\n  // Save user to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('codenames_user', JSON.stringify(user));\r\n  }, [user]);\r\n\r\n  // Update username\r\n  const updateUsername = (newUsername) => {\r\n    setUser(prevUser => ({\r\n      ...prevUser,\r\n      username: newUsername\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, updateUsername }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAEjE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC;AACA,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACrC,KAAM,CAAAU,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CACxD,GAAIF,SAAS,CAAE,CACb,MAAO,CAAAG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAC9B,CACA,MAAO,CACLK,EAAE,CAAE,QAAQC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,EAAE,CACxDC,QAAQ,CAAE,EACZ,CAAC,CACH,CAAC,CAAC,CAEF;AACAnB,SAAS,CAAC,IAAM,CACdU,YAAY,CAACU,OAAO,CAAC,gBAAgB,CAAER,IAAI,CAACS,SAAS,CAACd,IAAI,CAAC,CAAC,CAC9D,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV;AACA,KAAM,CAAAe,cAAc,CAAIC,WAAW,EAAK,CACtCf,OAAO,CAACgB,QAAQ,GAAK,CACnB,GAAGA,QAAQ,CACXL,QAAQ,CAAEI,WACZ,CAAC,CAAC,CAAC,CACL,CAAC,CAED,mBACErB,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,IAAI,CAAEe,cAAe,CAAE,CAAAhB,QAAA,CACnDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}