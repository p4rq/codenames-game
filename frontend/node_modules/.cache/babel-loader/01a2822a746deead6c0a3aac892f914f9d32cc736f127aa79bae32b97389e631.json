{"ast":null,"code":"import React,{useState,useEffect,useContext,useRef}from'react';import{UserContext}from'../../context/UserContext';import{sendMessage,getMessages}from'../../services/chatService';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=_ref=>{let{gameId,team}=_ref;const{user}=useContext(UserContext);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const messagesEndRef=useRef(null);// Fetch messages on mount and periodically\nuseEffect(()=>{if(!gameId)return;const fetchMessages=async()=>{try{const data=await getMessages(gameId,team);setMessages(data||[]);setError(null);}catch(err){setError('Failed to load messages');console.error(err);}};// Initial fetch\nfetchMessages();// Set up polling\nconst interval=setInterval(fetchMessages,3000);return()=>clearInterval(interval);},[gameId,team]);// Scroll to bottom when messages update\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);const handleSendMessage=async e=>{e.preventDefault();if(!newMessage.trim()||!user||!gameId)return;setLoading(true);try{await sendMessage(newMessage,user.id,user.username,gameId,team);setNewMessage('');// Fetch updated messages\nconst data=await getMessages(gameId,team);setMessages(data||[]);}catch(err){setError('Failed to send message');console.error(err);}finally{setLoading(false);}};// Determine if the current user can access this team's chat\nconst canAccessChat=!team||(user===null||user===void 0?void 0:user.team)===team||(user===null||user===void 0?void 0:user.role)==='SPYMASTER';return/*#__PURE__*/_jsxs(\"div\",{className:`chat-container ${team?`team-${team.toLowerCase()}`:''}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:team?`${team} Team Chat`:'Game Chat'}),!canAccessChat?/*#__PURE__*/_jsx(\"p\",{className:\"access-denied\",children:\"You don't have access to this team's chat\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-messages\",children:\"No messages yet\"}):messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.sender_id===(user===null||user===void 0?void 0:user.id)?'own-message':''}`,children:[/*#__PURE__*/_jsxs(\"span\",{className:\"message-username\",children:[msg.username,\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:msg.content}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date(msg.timestamp).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})})]},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"message-form\",onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type a message...\",disabled:loading||!user}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!newMessage.trim()||!user,children:\"Send\"})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","UserContext","sendMessage","getMessages","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","_ref","gameId","team","user","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","fetchMessages","data","err","console","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","id","username","canAccessChat","role","className","toLowerCase","children","length","map","msg","sender_id","content","Date","timestamp","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Chat/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { sendMessage, getMessages } from '../../services/chatService';\r\nimport './Chat.css';\r\n\r\nconst Chat = ({ gameId, team }) => {\r\n  const { user } = useContext(UserContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // Fetch messages on mount and periodically\r\n  useEffect(() => {\r\n    if (!gameId) return;\r\n    \r\n    const fetchMessages = async () => {\r\n      try {\r\n        const data = await getMessages(gameId, team);\r\n        setMessages(data || []);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to load messages');\r\n        console.error(err);\r\n      }\r\n    };\r\n    \r\n    // Initial fetch\r\n    fetchMessages();\r\n    \r\n    // Set up polling\r\n    const interval = setInterval(fetchMessages, 3000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [gameId, team]);\r\n  \r\n  // Scroll to bottom when messages update\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newMessage.trim() || !user || !gameId) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      await sendMessage(newMessage, user.id, user.username, gameId, team);\r\n      setNewMessage('');\r\n      \r\n      // Fetch updated messages\r\n      const data = await getMessages(gameId, team);\r\n      setMessages(data || []);\r\n    } catch (err) {\r\n      setError('Failed to send message');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Determine if the current user can access this team's chat\r\n  const canAccessChat = !team || user?.team === team || user?.role === 'SPYMASTER';\r\n  \r\n  return (\r\n    <div className={`chat-container ${team ? `team-${team.toLowerCase()}` : ''}`}>\r\n      <h3>{team ? `${team} Team Chat` : 'Game Chat'}</h3>\r\n      \r\n      {!canAccessChat ? (\r\n        <p className=\"access-denied\">You don't have access to this team's chat</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"messages-container\">\r\n            {messages.length === 0 ? (\r\n              <p className=\"no-messages\">No messages yet</p>\r\n            ) : (\r\n              messages.map((msg) => (\r\n                <div \r\n                  key={msg.id} \r\n                  className={`message ${msg.sender_id === user?.id ? 'own-message' : ''}`}\r\n                >\r\n                  <span className=\"message-username\">{msg.username}:</span>\r\n                  <span className=\"message-content\">{msg.content}</span>\r\n                  <span className=\"message-time\">\r\n                    {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                </div>\r\n              ))\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n            \r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n          \r\n          <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              disabled={loading || !user}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading || !newMessage.trim() || !user}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}