{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{Link,useLocation,useParams}from'react-router-dom';import{UserContext}from'../../context/UserContext';import{GameContext}from'../../context/GameContext';import'./style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=_ref=>{let{darkMode,toggleDarkMode}=_ref;const location=useLocation();const params=useParams();const{user,updateUsername}=useContext(UserContext);const{game,changeTeam}=useContext(GameContext);const[showSettings,setShowSettings]=useState(false);const[newUsername,setNewUsername]=useState((user===null||user===void 0?void 0:user.username)||'');// Get gameId from URL parameters if on a game page\nconst gameId=params.gameId||location.pathname.split('/').filter(Boolean)[1];// Debug - log user object to console when it changes\nuseEffect(()=>{console.log(\"Navbar - Current user:\",user);},[user]);const handleUsernameChange=e=>{e.preventDefault();if(newUsername.trim()){updateUsername(newUsername.trim());setShowSettings(false);}};const handleTeamChange=async team=>{if(gameId&&user){console.log(`Attempting to change team to ${team} for user ${user.id} in game ${gameId}`);await changeTeam(gameId,user.id,team);setShowSettings(false);}else{console.log(\"Can't change team - missing gameId or user:\",{gameId,userId:user===null||user===void 0?void 0:user.id});}};// Get current team from different sources\nconst getCurrentTeam=()=>{// Try to get user's team directly from user object first\nif(user!==null&&user!==void 0&&user.team){return user.team;}// If not found there, try to find the player in the current game\nif(game!==null&&game!==void 0&&game.players&&user!==null&&user!==void 0&&user.id){const player=game.players.find(p=>p.id===user.id);if(player!==null&&player!==void 0&&player.team){return player.team;}}// Default fallback\nreturn'observer';};// Get display name for team\nconst getTeamDisplay=()=>{const currentTeam=getCurrentTeam();if(currentTeam==='observer')return'Observer';return currentTeam.charAt(0).toUpperCase()+currentTeam.slice(1);};const currentTeam=getCurrentTeam();return/*#__PURE__*/_jsx(\"nav\",{className:`navbar ${darkMode?'dark':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navbar-brand\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Codenames\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleDarkMode,\"aria-label\":darkMode?'Switch to light mode':'Switch to dark mode',children:darkMode?'☀️':'🌙'}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-menu\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`user-menu-button ${currentTeam}-user`,onClick:()=>setShowSettings(!showSettings),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:user.username}),/*#__PURE__*/_jsx(\"span\",{className:\"team-label\",children:getTeamDisplay()})]}),/*#__PURE__*/_jsx(\"span\",{className:\"dropdown-icon\",children:\"\\u25BC\"})]}),showSettings&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUsernameChange,className:\"settings-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Change Name\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:newUsername,onChange:e=>setNewUsername(e.target.value),placeholder:\"New username\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"})]})]}),gameId&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Change Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:`team-btn red ${currentTeam==='red'?'active':''}`,onClick:()=>handleTeamChange('red'),children:\"Red Team\"}),/*#__PURE__*/_jsx(\"button\",{className:`team-btn blue ${currentTeam==='blue'?'active':''}`,onClick:()=>handleTeamChange('blue'),children:\"Blue Team\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-settings\",onClick:()=>setShowSettings(false),children:\"Close\"})]})]})]})]})});};export default Navbar;","map":{"version":3,"names":["React","useState","useContext","useEffect","Link","useLocation","useParams","UserContext","GameContext","jsx","_jsx","jsxs","_jsxs","Navbar","_ref","darkMode","toggleDarkMode","location","params","user","updateUsername","game","changeTeam","showSettings","setShowSettings","newUsername","setNewUsername","username","gameId","pathname","split","filter","Boolean","console","log","handleUsernameChange","e","preventDefault","trim","handleTeamChange","team","id","userId","getCurrentTeam","players","player","find","p","getTeamDisplay","currentTeam","charAt","toUpperCase","slice","className","children","to","onClick","onSubmit","htmlFor","type","value","onChange","target","placeholder"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Navbar/index.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport './style.css';\r\n\r\nconst Navbar = ({ darkMode, toggleDarkMode }) => {\r\n  const location = useLocation();\r\n  const params = useParams();\r\n  const { user, updateUsername } = useContext(UserContext);\r\n  const { game, changeTeam } = useContext(GameContext);\r\n  \r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [newUsername, setNewUsername] = useState(user?.username || '');\r\n  \r\n  // Get gameId from URL parameters if on a game page\r\n  const gameId = params.gameId || location.pathname.split('/').filter(Boolean)[1];\r\n  \r\n  // Debug - log user object to console when it changes\r\n  useEffect(() => {\r\n    console.log(\"Navbar - Current user:\", user);\r\n  }, [user]);\r\n  \r\n  const handleUsernameChange = (e) => {\r\n    e.preventDefault();\r\n    if (newUsername.trim()) {\r\n      updateUsername(newUsername.trim());\r\n      setShowSettings(false);\r\n    }\r\n  };\r\n  \r\n  const handleTeamChange = async (team) => {\r\n    if (gameId && user) {\r\n      console.log(`Attempting to change team to ${team} for user ${user.id} in game ${gameId}`);\r\n      await changeTeam(gameId, user.id, team);\r\n      setShowSettings(false);\r\n    } else {\r\n      console.log(\"Can't change team - missing gameId or user:\", { gameId, userId: user?.id });\r\n    }\r\n  };\r\n  \r\n  // Get current team from different sources\r\n  const getCurrentTeam = () => {\r\n    // Try to get user's team directly from user object first\r\n    if (user?.team) {\r\n      return user.team;\r\n    }\r\n    \r\n    // If not found there, try to find the player in the current game\r\n    if (game?.players && user?.id) {\r\n      const player = game.players.find(p => p.id === user.id);\r\n      if (player?.team) {\r\n        return player.team;\r\n      }\r\n    }\r\n    \r\n    // Default fallback\r\n    return 'observer';\r\n  };\r\n  \r\n  // Get display name for team\r\n  const getTeamDisplay = () => {\r\n    const currentTeam = getCurrentTeam();\r\n    if (currentTeam === 'observer') return 'Observer';\r\n    return currentTeam.charAt(0).toUpperCase() + currentTeam.slice(1);\r\n  };\r\n  \r\n  const currentTeam = getCurrentTeam();\r\n  \r\n  return (\r\n    <nav className={`navbar ${darkMode ? 'dark' : ''}`}>\r\n      <div className=\"navbar-content\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/\">\r\n            <h1>Codenames</h1>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"navbar-actions\">\r\n          <button \r\n            className=\"theme-toggle\" \r\n            onClick={toggleDarkMode} \r\n            aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\r\n          >\r\n            {darkMode ? '☀️' : '🌙'}\r\n          </button>\r\n          \r\n          {user && (\r\n            <div className=\"user-menu\">\r\n              <button \r\n                className={`user-menu-button ${currentTeam}-user`}\r\n                onClick={() => setShowSettings(!showSettings)}\r\n              >\r\n                <div className=\"user-info\">\r\n                  <span className=\"username\">{user.username}</span>\r\n                  <span className=\"team-label\">{getTeamDisplay()}</span>\r\n                </div>\r\n                <span className=\"dropdown-icon\">▼</span>\r\n              </button>\r\n              \r\n              {showSettings && (\r\n                <div className=\"settings-dropdown\">\r\n                  {/* Change username */}\r\n                  <form onSubmit={handleUsernameChange} className=\"settings-form\">\r\n                    <label htmlFor=\"username\">Change Name</label>\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={newUsername}\r\n                        onChange={(e) => setNewUsername(e.target.value)}\r\n                        placeholder=\"New username\"\r\n                      />\r\n                      <button type=\"submit\">Save</button>\r\n                    </div>\r\n                  </form>\r\n                  \r\n                  {/* Change team - only show if in a game */}\r\n                  {gameId && (\r\n                    <div className=\"team-selection\">\r\n                      <label>Change Team</label>\r\n                      <div className=\"team-buttons\">\r\n                        <button \r\n                          className={`team-btn red ${currentTeam === 'red' ? 'active' : ''}`}\r\n                          onClick={() => handleTeamChange('red')}\r\n                        >\r\n                          Red Team\r\n                        </button>\r\n                        <button \r\n                          className={`team-btn blue ${currentTeam === 'blue' ? 'active' : ''}`}\r\n                          onClick={() => handleTeamChange('blue')}\r\n                        >\r\n                          Blue Team\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Close button */}\r\n                  <button \r\n                    className=\"close-settings\"\r\n                    onClick={() => setShowSettings(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC9D,OAASC,IAAI,CAAEC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CAC/D,OAASC,WAAW,KAAQ,2BAA2B,CACvD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,QAAQ,CAAEC,cAAe,CAAC,CAAAF,IAAA,CAC1C,KAAM,CAAAG,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAa,MAAM,CAAGZ,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAEa,IAAI,CAAEC,cAAe,CAAC,CAAGlB,UAAU,CAACK,WAAW,CAAC,CACxD,KAAM,CAAEc,IAAI,CAAEC,UAAW,CAAC,CAAGpB,UAAU,CAACM,WAAW,CAAC,CAEpD,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACwB,WAAW,CAAEC,cAAc,CAAC,CAAGzB,QAAQ,CAAC,CAAAkB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEQ,QAAQ,GAAI,EAAE,CAAC,CAEpE;AACA,KAAM,CAAAC,MAAM,CAAGV,MAAM,CAACU,MAAM,EAAIX,QAAQ,CAACY,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAE/E;AACA7B,SAAS,CAAC,IAAM,CACd8B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEf,IAAI,CAAC,CAC7C,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAgB,oBAAoB,CAAIC,CAAC,EAAK,CAClCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAIZ,WAAW,CAACa,IAAI,CAAC,CAAC,CAAE,CACtBlB,cAAc,CAACK,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC,CAClCd,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAe,gBAAgB,CAAG,KAAO,CAAAC,IAAI,EAAK,CACvC,GAAIZ,MAAM,EAAIT,IAAI,CAAE,CAClBc,OAAO,CAACC,GAAG,CAAC,gCAAgCM,IAAI,aAAarB,IAAI,CAACsB,EAAE,YAAYb,MAAM,EAAE,CAAC,CACzF,KAAM,CAAAN,UAAU,CAACM,MAAM,CAAET,IAAI,CAACsB,EAAE,CAAED,IAAI,CAAC,CACvChB,eAAe,CAAC,KAAK,CAAC,CACxB,CAAC,IAAM,CACLS,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAE,CAAEN,MAAM,CAAEc,MAAM,CAAEvB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsB,EAAG,CAAC,CAAC,CAC1F,CACF,CAAC,CAED;AACA,KAAM,CAAAE,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACA,GAAIxB,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEqB,IAAI,CAAE,CACd,MAAO,CAAArB,IAAI,CAACqB,IAAI,CAClB,CAEA;AACA,GAAInB,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEuB,OAAO,EAAIzB,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEsB,EAAE,CAAE,CAC7B,KAAM,CAAAI,MAAM,CAAGxB,IAAI,CAACuB,OAAO,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACN,EAAE,GAAKtB,IAAI,CAACsB,EAAE,CAAC,CACvD,GAAII,MAAM,SAANA,MAAM,WAANA,MAAM,CAAEL,IAAI,CAAE,CAChB,MAAO,CAAAK,MAAM,CAACL,IAAI,CACpB,CACF,CAEA;AACA,MAAO,UAAU,CACnB,CAAC,CAED;AACA,KAAM,CAAAQ,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,WAAW,CAAGN,cAAc,CAAC,CAAC,CACpC,GAAIM,WAAW,GAAK,UAAU,CAAE,MAAO,UAAU,CACjD,MAAO,CAAAA,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGF,WAAW,CAACG,KAAK,CAAC,CAAC,CAAC,CACnE,CAAC,CAED,KAAM,CAAAH,WAAW,CAAGN,cAAc,CAAC,CAAC,CAEpC,mBACEjC,IAAA,QAAK2C,SAAS,CAAE,UAAUtC,QAAQ,CAAG,MAAM,CAAG,EAAE,EAAG,CAAAuC,QAAA,cACjD1C,KAAA,QAAKyC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5C,IAAA,QAAK2C,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3B5C,IAAA,CAACN,IAAI,EAACmD,EAAE,CAAC,GAAG,CAAAD,QAAA,cACV5C,IAAA,OAAA4C,QAAA,CAAI,WAAS,CAAI,CAAC,CACd,CAAC,CACJ,CAAC,cAEN1C,KAAA,QAAKyC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5C,IAAA,WACE2C,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAExC,cAAe,CACxB,aAAYD,QAAQ,CAAG,sBAAsB,CAAG,qBAAsB,CAAAuC,QAAA,CAErEvC,QAAQ,CAAG,IAAI,CAAG,IAAI,CACjB,CAAC,CAERI,IAAI,eACHP,KAAA,QAAKyC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB1C,KAAA,WACEyC,SAAS,CAAE,oBAAoBJ,WAAW,OAAQ,CAClDO,OAAO,CAAEA,CAAA,GAAMhC,eAAe,CAAC,CAACD,YAAY,CAAE,CAAA+B,QAAA,eAE9C1C,KAAA,QAAKyC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB5C,IAAA,SAAM2C,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEnC,IAAI,CAACQ,QAAQ,CAAO,CAAC,cACjDjB,IAAA,SAAM2C,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEN,cAAc,CAAC,CAAC,CAAO,CAAC,EACnD,CAAC,cACNtC,IAAA,SAAM2C,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,EAClC,CAAC,CAER/B,YAAY,eACXX,KAAA,QAAKyC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAEhC1C,KAAA,SAAM6C,QAAQ,CAAEtB,oBAAqB,CAACkB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC7D5C,IAAA,UAAOgD,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,aAAW,CAAO,CAAC,cAC7C1C,KAAA,QAAKyC,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B5C,IAAA,UACEiD,IAAI,CAAC,MAAM,CACXlB,EAAE,CAAC,UAAU,CACbmB,KAAK,CAAEnC,WAAY,CACnBoC,QAAQ,CAAGzB,CAAC,EAAKV,cAAc,CAACU,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAChDG,WAAW,CAAC,cAAc,CAC3B,CAAC,cACFrD,IAAA,WAAQiD,IAAI,CAAC,QAAQ,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAAC,EAChC,CAAC,EACF,CAAC,CAGN1B,MAAM,eACLhB,KAAA,QAAKyC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5C,IAAA,UAAA4C,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1B1C,KAAA,QAAKyC,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B5C,IAAA,WACE2C,SAAS,CAAE,gBAAgBJ,WAAW,GAAK,KAAK,CAAG,QAAQ,CAAG,EAAE,EAAG,CACnEO,OAAO,CAAEA,CAAA,GAAMjB,gBAAgB,CAAC,KAAK,CAAE,CAAAe,QAAA,CACxC,UAED,CAAQ,CAAC,cACT5C,IAAA,WACE2C,SAAS,CAAE,iBAAiBJ,WAAW,GAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,EAAG,CACrEO,OAAO,CAAEA,CAAA,GAAMjB,gBAAgB,CAAC,MAAM,CAAE,CAAAe,QAAA,CACzC,WAED,CAAQ,CAAC,EACN,CAAC,EACH,CACN,cAGD5C,IAAA,WACE2C,SAAS,CAAC,gBAAgB,CAC1BG,OAAO,CAAEA,CAAA,GAAMhC,eAAe,CAAC,KAAK,CAAE,CAAA8B,QAAA,CACvC,OAED,CAAQ,CAAC,EACN,CACN,EACE,CACN,EACE,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}