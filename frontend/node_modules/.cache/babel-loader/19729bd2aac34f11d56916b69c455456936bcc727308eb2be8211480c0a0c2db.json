{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anuarbek\\\\codenames-game\\\\frontend\\\\src\\\\context\\\\GameContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\n\n// API URL\nconst API_URL = 'http://localhost:8080/api';\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [game, setGame] = useState(null);\n\n  // Clear error\n  const clearError = () => setError(null);\n\n  // Create a new game\n  const startNewGame = async (userId, username) => {\n    try {\n      clearError();\n      const response = await axios.post(`${API_URL}/game/start`, {\n        creator_id: userId,\n        username: username\n      });\n      const newGame = response.data;\n      setGame(newGame);\n      return newGame;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create game. Please try again.');\n      return null;\n    }\n  };\n\n  // Join existing game\n  const joinExistingGame = async (gameId, userId, username, team) => {\n    try {\n      clearError();\n      const response = await axios.post(`${API_URL}/game/join`, {\n        game_id: gameId,\n        player_id: userId,\n        username: username,\n        team: team\n      });\n      const joinedGame = response.data;\n      setGame(joinedGame);\n      return joinedGame;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to join game. Please check the game code and try again.');\n      return null;\n    }\n  };\n\n  // Get game state\n  const getGameState = async gameId => {\n    try {\n      clearError();\n      const response = await axios.get(`${API_URL}/game/state`, {\n        params: {\n          id: gameId\n        }\n      });\n      const gameState = response.data;\n      setGame(gameState);\n      return gameState;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to get game state.');\n      return null;\n    }\n  };\n\n  // Reveal card\n  const revealCard = async (gameId, cardId, playerId) => {\n    try {\n      clearError();\n      const response = await axios.post(`${API_URL}/game/reveal`, {\n        game_id: gameId,\n        card_id: cardId,\n        player_id: playerId\n      });\n      const updatedGame = response.data;\n      setGame(updatedGame);\n      return updatedGame;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to reveal card.');\n      return null;\n    }\n  };\n\n  // Set player as spymaster\n  const setSpymaster = async (gameId, playerId) => {\n    try {\n      clearError();\n      const response = await axios.post(`${API_URL}/game/set-spymaster`, null, {\n        params: {\n          game_id: gameId,\n          player_id: playerId\n        }\n      });\n      const updatedGame = response.data;\n      setGame(updatedGame);\n      return updatedGame;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to set spymaster.');\n      return null;\n    }\n  };\n\n  // End current team's turn\n  const endTurn = async (gameId, playerId) => {\n    try {\n      clearError();\n      const response = await axios.post(`${API_URL}/game/end-turn`, null, {\n        params: {\n          game_id: gameId,\n          player_id: playerId\n        }\n      });\n      const updatedGame = response.data;\n      setGame(updatedGame);\n      return updatedGame;\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Failed to end turn.');\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      game,\n      error,\n      startNewGame,\n      joinExistingGame,\n      getGameState,\n      revealCard,\n      setSpymaster,\n      endTurn,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"XItYmdnRCYjlWrcGsDc3zISRIcs=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","GameContext","API_URL","GameProvider","children","_s","error","setError","game","setGame","clearError","startNewGame","userId","username","response","post","creator_id","newGame","data","err","_err$response","_err$response$data","message","joinExistingGame","gameId","team","game_id","player_id","joinedGame","_err$response2","_err$response2$data","getGameState","get","params","id","gameState","_err$response3","_err$response3$data","revealCard","cardId","playerId","card_id","updatedGame","_err$response4","_err$response4$data","setSpymaster","_err$response5","_err$response5$data","endTurn","_err$response6","_err$response6$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/context/GameContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create context\r\nexport const GameContext = createContext();\r\n\r\n// API URL\r\nconst API_URL = 'http://localhost:8080/api';\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [game, setGame] = useState(null);\r\n  \r\n  // Clear error\r\n  const clearError = () => setError(null);\r\n  \r\n  // Create a new game\r\n  const startNewGame = async (userId, username) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/start`, {\r\n        creator_id: userId,\r\n        username: username\r\n      });\r\n      \r\n      const newGame = response.data;\r\n      setGame(newGame);\r\n      return newGame;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to create game. Please try again.');\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Join existing game\r\n  const joinExistingGame = async (gameId, userId, username, team) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/join`, {\r\n        game_id: gameId,\r\n        player_id: userId,\r\n        username: username,\r\n        team: team\r\n      });\r\n      \r\n      const joinedGame = response.data;\r\n      setGame(joinedGame);\r\n      return joinedGame;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to join game. Please check the game code and try again.');\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Get game state\r\n  const getGameState = async (gameId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.get(`${API_URL}/game/state`, { \r\n        params: { id: gameId } \r\n      });\r\n      \r\n      const gameState = response.data;\r\n      setGame(gameState);\r\n      return gameState;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to get game state.');\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Reveal card\r\n  const revealCard = async (gameId, cardId, playerId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/reveal`, {\r\n        game_id: gameId,\r\n        card_id: cardId,\r\n        player_id: playerId\r\n      });\r\n      \r\n      const updatedGame = response.data;\r\n      setGame(updatedGame);\r\n      return updatedGame;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to reveal card.');\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Set player as spymaster\r\n  const setSpymaster = async (gameId, playerId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/set-spymaster`, null, {\r\n        params: {\r\n          game_id: gameId,\r\n          player_id: playerId\r\n        }\r\n      });\r\n      \r\n      const updatedGame = response.data;\r\n      setGame(updatedGame);\r\n      return updatedGame;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to set spymaster.');\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // End current team's turn\r\n  const endTurn = async (gameId, playerId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/end-turn`, null, {\r\n        params: {\r\n          game_id: gameId,\r\n          player_id: playerId\r\n        }\r\n      });\r\n      \r\n      const updatedGame = response.data;\r\n      setGame(updatedGame);\r\n      return updatedGame;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to end turn.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={{ \r\n      game,\r\n      error,\r\n      startNewGame,\r\n      joinExistingGame,\r\n      getGameState,\r\n      revealCard,\r\n      setSpymaster,\r\n      endTurn,\r\n      clearError\r\n    }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}