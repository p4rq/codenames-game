{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anuarbek\\\\codenames-game\\\\frontend\\\\src\\\\components\\\\Chat\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport { sendMessage, getMessages } from '../../services/chatService';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  gameId\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Fetch messages on mount and periodically\n  useEffect(() => {\n    if (!gameId) return;\n    const fetchMessages = async () => {\n      try {\n        const data = await getMessages(gameId);\n        setMessages(data || []);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load messages');\n        console.error(err);\n      }\n    };\n\n    // Initial fetch\n    fetchMessages();\n\n    // Set up polling\n    const interval = setInterval(fetchMessages, 3000);\n    return () => clearInterval(interval);\n  }, [gameId]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user || !gameId) return;\n    setLoading(true);\n    try {\n      await sendMessage(newMessage, user.id, user.username, gameId);\n      setNewMessage('');\n\n      // Fetch updated messages\n      const data = await getMessages(gameId);\n      setMessages(data || []);\n    } catch (err) {\n      setError('Failed to send message');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-messages\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender_id === (user === null || user === void 0 ? void 0 : user.id) ? 'own-message' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-username\",\n          children: [msg.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: loading || !user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || !newMessage.trim() || !user,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Hoptx76F+PJZ0z0A+GEs4BPHFVk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","UserContext","sendMessage","getMessages","jsxDEV","_jsxDEV","Chat","gameId","_s","user","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","fetchMessages","data","err","console","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","id","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","sender_id","content","Date","timestamp","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Chat/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { sendMessage, getMessages } from '../../services/chatService';\r\nimport './style.css';\r\n\r\nconst Chat = ({ gameId }) => {\r\n  const { user } = useContext(UserContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // Fetch messages on mount and periodically\r\n  useEffect(() => {\r\n    if (!gameId) return;\r\n    \r\n    const fetchMessages = async () => {\r\n      try {\r\n        const data = await getMessages(gameId);\r\n        setMessages(data || []);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to load messages');\r\n        console.error(err);\r\n      }\r\n    };\r\n    \r\n    // Initial fetch\r\n    fetchMessages();\r\n    \r\n    // Set up polling\r\n    const interval = setInterval(fetchMessages, 3000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [gameId]);\r\n  \r\n  // Scroll to bottom when messages update\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newMessage.trim() || !user || !gameId) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      await sendMessage(newMessage, user.id, user.username, gameId);\r\n      setNewMessage('');\r\n      \r\n      // Fetch updated messages\r\n      const data = await getMessages(gameId);\r\n      setMessages(data || []);\r\n    } catch (err) {\r\n      setError('Failed to send message');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h3>Chat</h3>\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <p className=\"no-messages\">No messages yet</p>\r\n        ) : (\r\n          messages.map((msg) => (\r\n            <div \r\n              key={msg.id} \r\n              className={`message ${msg.sender_id === user?.id ? 'own-message' : ''}`}\r\n            >\r\n              <span className=\"message-username\">{msg.username}:</span>\r\n              <span className=\"message-content\">{msg.content}</span>\r\n              <span className=\"message-time\">\r\n                {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n              </span>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n        \r\n        {error && <p className=\"error-message\">{error}</p>}\r\n      </div>\r\n      \r\n      <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          disabled={loading || !user}\r\n        />\r\n        <button \r\n          type=\"submit\" \r\n          disabled={loading || !newMessage.trim() || !user}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}