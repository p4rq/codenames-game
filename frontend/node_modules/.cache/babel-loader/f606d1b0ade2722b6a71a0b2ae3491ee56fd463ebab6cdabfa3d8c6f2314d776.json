{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{Link}from'react-router-dom';import{UserContext}from'../../context/UserContext';import{GameContext}from'../../context/GameContext';import'./style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=_ref=>{let{darkMode,toggleDarkMode,gameId}=_ref;const{user,updateUser}=useContext(UserContext);const{changeTeam,game,handleTeamChange}=useContext(GameContext);const[showSettings,setShowSettings]=useState(false);const[newUsername,setNewUsername]=useState((user===null||user===void 0?void 0:user.username)||'');const[isChangingTeam,setIsChangingTeam]=useState(false);// Update username when user changes\nuseEffect(()=>{if(user!==null&&user!==void 0&&user.username){setNewUsername(user.username);}},[user]);const handleUsernameChange=e=>{e.preventDefault();if(newUsername.trim()){updateUser({username:newUsername.trim()});setShowSettings(false);}};const handleTeamChangeClick=async team=>{if(gameId&&user&&!isChangingTeam){setIsChangingTeam(true);try{// Use the improved handleTeamChange from GameContext with gameId parameter\nif(handleTeamChange){await handleTeamChange(gameId,team);}else{// Fallback to direct changeTeam if handleTeamChange not available\nawait changeTeam(gameId,user.id,team);// Update local user state for immediate feedback\nupdateUser({team});}}catch(error){console.error(\"Failed to change team:\",error);// Force update the UI for better UX even if backend fails\nupdateUser({team});}finally{setIsChangingTeam(false);setShowSettings(false);}}};// Get display name for team with fallback handling\nconst getTeamDisplay=()=>{if(!user)return'Observer';// Check team from user object or game state\nlet team=user.team;if(!team&&game!==null&&game!==void 0&&game.players){const player=game.players.find(p=>p.id===user.id);if(player){team=player.team;}}if(!team)return'Observer';return team.charAt(0).toUpperCase()+team.slice(1);};return/*#__PURE__*/_jsx(\"nav\",{className:`navbar ${darkMode?'dark':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navbar-brand\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Codenames\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleDarkMode,\"aria-label\":darkMode?'Switch to light mode':'Switch to dark mode',children:darkMode?'☀️':'🌙'}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-menu\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`user-menu-button ${user.team||'observer'}-user`,onClick:()=>setShowSettings(!showSettings),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:user.username}),/*#__PURE__*/_jsx(\"span\",{className:\"team-label\",children:getTeamDisplay()})]}),/*#__PURE__*/_jsx(\"span\",{className:\"dropdown-icon\",children:\"\\u25BC\"})]}),showSettings&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUsernameChange,className:\"settings-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Change Name\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:newUsername,onChange:e=>setNewUsername(e.target.value),placeholder:\"New username\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"})]})]}),gameId&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Change Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:`team-btn red ${(user===null||user===void 0?void 0:user.team)==='red'?'active':''}`,onClick:()=>handleTeamChangeClick('red'),disabled:isChangingTeam,children:\"Red Team\"}),/*#__PURE__*/_jsx(\"button\",{className:`team-btn blue ${(user===null||user===void 0?void 0:user.team)==='blue'?'active':''}`,onClick:()=>handleTeamChangeClick('blue'),disabled:isChangingTeam,children:\"Blue Team\"})]}),isChangingTeam&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Changing team...\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-settings\",onClick:()=>setShowSettings(false),children:\"Close\"})]})]})]})]})});};export default Navbar;","map":{"version":3,"names":["React","useState","useContext","useEffect","Link","UserContext","GameContext","jsx","_jsx","jsxs","_jsxs","Navbar","_ref","darkMode","toggleDarkMode","gameId","user","updateUser","changeTeam","game","handleTeamChange","showSettings","setShowSettings","newUsername","setNewUsername","username","isChangingTeam","setIsChangingTeam","handleUsernameChange","e","preventDefault","trim","handleTeamChangeClick","team","id","error","console","getTeamDisplay","players","player","find","p","charAt","toUpperCase","slice","className","children","to","onClick","onSubmit","htmlFor","type","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Navbar/index.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport './style.css';\r\n\r\nconst Navbar = ({ darkMode, toggleDarkMode, gameId }) => {\r\n  const { user, updateUser } = useContext(UserContext);\r\n  const { changeTeam, game, handleTeamChange } = useContext(GameContext);\r\n  \r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [newUsername, setNewUsername] = useState(user?.username || '');\r\n  const [isChangingTeam, setIsChangingTeam] = useState(false);\r\n  \r\n  // Update username when user changes\r\n  useEffect(() => {\r\n    if (user?.username) {\r\n      setNewUsername(user.username);\r\n    }\r\n  }, [user]);\r\n  \r\n  const handleUsernameChange = (e) => {\r\n    e.preventDefault();\r\n    if (newUsername.trim()) {\r\n      updateUser({ username: newUsername.trim() });\r\n      setShowSettings(false);\r\n    }\r\n  };\r\n  \r\n  const handleTeamChangeClick = async (team) => {\r\n    if (gameId && user && !isChangingTeam) {\r\n      setIsChangingTeam(true);\r\n      \r\n      try {\r\n        // Use the improved handleTeamChange from GameContext with gameId parameter\r\n        if (handleTeamChange) {\r\n          await handleTeamChange(gameId, team);\r\n        } else {\r\n          // Fallback to direct changeTeam if handleTeamChange not available\r\n          await changeTeam(gameId, user.id, team);\r\n          // Update local user state for immediate feedback\r\n          updateUser({ team });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to change team:\", error);\r\n        // Force update the UI for better UX even if backend fails\r\n        updateUser({ team });\r\n      } finally {\r\n        setIsChangingTeam(false);\r\n        setShowSettings(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Get display name for team with fallback handling\r\n  const getTeamDisplay = () => {\r\n    if (!user) return 'Observer';\r\n    \r\n    // Check team from user object or game state\r\n    let team = user.team;\r\n    if (!team && game?.players) {\r\n      const player = game.players.find(p => p.id === user.id);\r\n      if (player) {\r\n        team = player.team;\r\n      }\r\n    }\r\n    \r\n    if (!team) return 'Observer';\r\n    return team.charAt(0).toUpperCase() + team.slice(1);\r\n  };\r\n  \r\n  return (\r\n    <nav className={`navbar ${darkMode ? 'dark' : ''}`}>\r\n      <div className=\"navbar-content\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/\">\r\n            <h1>Codenames</h1>\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"navbar-actions\">\r\n          <button \r\n            className=\"theme-toggle\" \r\n            onClick={toggleDarkMode} \r\n            aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\r\n          >\r\n            {darkMode ? '☀️' : '🌙'}\r\n          </button>\r\n          \r\n          {user && (\r\n            <div className=\"user-menu\">\r\n              <button \r\n                className={`user-menu-button ${user.team || 'observer'}-user`}\r\n                onClick={() => setShowSettings(!showSettings)}\r\n              >\r\n                <div className=\"user-info\">\r\n                  <span className=\"username\">{user.username}</span>\r\n                  <span className=\"team-label\">{getTeamDisplay()}</span>\r\n                </div>\r\n                <span className=\"dropdown-icon\">▼</span>\r\n              </button>\r\n              \r\n              {showSettings && (\r\n                <div className=\"settings-dropdown\">\r\n                  {/* Change username */}\r\n                  <form onSubmit={handleUsernameChange} className=\"settings-form\">\r\n                    <label htmlFor=\"username\">Change Name</label>\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={newUsername}\r\n                        onChange={(e) => setNewUsername(e.target.value)}\r\n                        placeholder=\"New username\"\r\n                      />\r\n                      <button type=\"submit\">Save</button>\r\n                    </div>\r\n                  </form>\r\n                  \r\n                  {/* Change team */}\r\n                  {gameId && (\r\n                    <div className=\"team-selection\">\r\n                      <label>Change Team</label>\r\n                      <div className=\"team-buttons\">\r\n                        <button \r\n                          className={`team-btn red ${user?.team === 'red' ? 'active' : ''}`}\r\n                          onClick={() => handleTeamChangeClick('red')}\r\n                          disabled={isChangingTeam}\r\n                        >\r\n                          Red Team\r\n                        </button>\r\n                        <button \r\n                          className={`team-btn blue ${user?.team === 'blue' ? 'active' : ''}`}\r\n                          onClick={() => handleTeamChangeClick('blue')}\r\n                          disabled={isChangingTeam}\r\n                        >\r\n                          Blue Team\r\n                        </button>\r\n                      </div>\r\n                      {isChangingTeam && <div className=\"loading\">Changing team...</div>}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Close button */}\r\n                  <button \r\n                    className=\"close-settings\"\r\n                    onClick={() => setShowSettings(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC9D,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,WAAW,KAAQ,2BAA2B,CACvD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAA0C,IAAzC,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,MAAO,CAAC,CAAAH,IAAA,CAClD,KAAM,CAAEI,IAAI,CAAEC,UAAW,CAAC,CAAGf,UAAU,CAACG,WAAW,CAAC,CACpD,KAAM,CAAEa,UAAU,CAAEC,IAAI,CAAEC,gBAAiB,CAAC,CAAGlB,UAAU,CAACI,WAAW,CAAC,CAEtE,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,CAAAe,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAES,QAAQ,GAAI,EAAE,CAAC,CACpE,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CAE3D;AACAE,SAAS,CAAC,IAAM,CACd,GAAIa,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAES,QAAQ,CAAE,CAClBD,cAAc,CAACR,IAAI,CAACS,QAAQ,CAAC,CAC/B,CACF,CAAC,CAAE,CAACT,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAY,oBAAoB,CAAIC,CAAC,EAAK,CAClCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAIP,WAAW,CAACQ,IAAI,CAAC,CAAC,CAAE,CACtBd,UAAU,CAAC,CAAEQ,QAAQ,CAAEF,WAAW,CAACQ,IAAI,CAAC,CAAE,CAAC,CAAC,CAC5CT,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAU,qBAAqB,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC5C,GAAIlB,MAAM,EAAIC,IAAI,EAAI,CAACU,cAAc,CAAE,CACrCC,iBAAiB,CAAC,IAAI,CAAC,CAEvB,GAAI,CACF;AACA,GAAIP,gBAAgB,CAAE,CACpB,KAAM,CAAAA,gBAAgB,CAACL,MAAM,CAAEkB,IAAI,CAAC,CACtC,CAAC,IAAM,CACL;AACA,KAAM,CAAAf,UAAU,CAACH,MAAM,CAAEC,IAAI,CAACkB,EAAE,CAAED,IAAI,CAAC,CACvC;AACAhB,UAAU,CAAC,CAAEgB,IAAK,CAAC,CAAC,CACtB,CACF,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C;AACAlB,UAAU,CAAC,CAAEgB,IAAK,CAAC,CAAC,CACtB,CAAC,OAAS,CACRN,iBAAiB,CAAC,KAAK,CAAC,CACxBL,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAe,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAACrB,IAAI,CAAE,MAAO,UAAU,CAE5B;AACA,GAAI,CAAAiB,IAAI,CAAGjB,IAAI,CAACiB,IAAI,CACpB,GAAI,CAACA,IAAI,EAAId,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEmB,OAAO,CAAE,CAC1B,KAAM,CAAAC,MAAM,CAAGpB,IAAI,CAACmB,OAAO,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACP,EAAE,GAAKlB,IAAI,CAACkB,EAAE,CAAC,CACvD,GAAIK,MAAM,CAAE,CACVN,IAAI,CAAGM,MAAM,CAACN,IAAI,CACpB,CACF,CAEA,GAAI,CAACA,IAAI,CAAE,MAAO,UAAU,CAC5B,MAAO,CAAAA,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGV,IAAI,CAACW,KAAK,CAAC,CAAC,CAAC,CACrD,CAAC,CAED,mBACEpC,IAAA,QAAKqC,SAAS,CAAE,UAAUhC,QAAQ,CAAG,MAAM,CAAG,EAAE,EAAG,CAAAiC,QAAA,cACjDpC,KAAA,QAAKmC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BtC,IAAA,QAAKqC,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BtC,IAAA,CAACJ,IAAI,EAAC2C,EAAE,CAAC,GAAG,CAAAD,QAAA,cACVtC,IAAA,OAAAsC,QAAA,CAAI,WAAS,CAAI,CAAC,CACd,CAAC,CACJ,CAAC,cAENpC,KAAA,QAAKmC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BtC,IAAA,WACEqC,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAElC,cAAe,CACxB,aAAYD,QAAQ,CAAG,sBAAsB,CAAG,qBAAsB,CAAAiC,QAAA,CAErEjC,QAAQ,CAAG,IAAI,CAAG,IAAI,CACjB,CAAC,CAERG,IAAI,eACHN,KAAA,QAAKmC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpC,KAAA,WACEmC,SAAS,CAAE,oBAAoB7B,IAAI,CAACiB,IAAI,EAAI,UAAU,OAAQ,CAC9De,OAAO,CAAEA,CAAA,GAAM1B,eAAe,CAAC,CAACD,YAAY,CAAE,CAAAyB,QAAA,eAE9CpC,KAAA,QAAKmC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtC,IAAA,SAAMqC,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAE9B,IAAI,CAACS,QAAQ,CAAO,CAAC,cACjDjB,IAAA,SAAMqC,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAET,cAAc,CAAC,CAAC,CAAO,CAAC,EACnD,CAAC,cACN7B,IAAA,SAAMqC,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,EAClC,CAAC,CAERzB,YAAY,eACXX,KAAA,QAAKmC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAEhCpC,KAAA,SAAMuC,QAAQ,CAAErB,oBAAqB,CAACiB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC7DtC,IAAA,UAAO0C,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,aAAW,CAAO,CAAC,cAC7CpC,KAAA,QAAKmC,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BtC,IAAA,UACE2C,IAAI,CAAC,MAAM,CACXjB,EAAE,CAAC,UAAU,CACbkB,KAAK,CAAE7B,WAAY,CACnB8B,QAAQ,CAAGxB,CAAC,EAAKL,cAAc,CAACK,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE,CAChDG,WAAW,CAAC,cAAc,CAC3B,CAAC,cACF/C,IAAA,WAAQ2C,IAAI,CAAC,QAAQ,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAAC,EAChC,CAAC,EACF,CAAC,CAGN/B,MAAM,eACLL,KAAA,QAAKmC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BtC,IAAA,UAAAsC,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1BpC,KAAA,QAAKmC,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BtC,IAAA,WACEqC,SAAS,CAAE,gBAAgB,CAAA7B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEiB,IAAI,IAAK,KAAK,CAAG,QAAQ,CAAG,EAAE,EAAG,CAClEe,OAAO,CAAEA,CAAA,GAAMhB,qBAAqB,CAAC,KAAK,CAAE,CAC5CwB,QAAQ,CAAE9B,cAAe,CAAAoB,QAAA,CAC1B,UAED,CAAQ,CAAC,cACTtC,IAAA,WACEqC,SAAS,CAAE,iBAAiB,CAAA7B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEiB,IAAI,IAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,EAAG,CACpEe,OAAO,CAAEA,CAAA,GAAMhB,qBAAqB,CAAC,MAAM,CAAE,CAC7CwB,QAAQ,CAAE9B,cAAe,CAAAoB,QAAA,CAC1B,WAED,CAAQ,CAAC,EACN,CAAC,CACLpB,cAAc,eAAIlB,IAAA,QAAKqC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,kBAAgB,CAAK,CAAC,EAC/D,CACN,cAGDtC,IAAA,WACEqC,SAAS,CAAC,gBAAgB,CAC1BG,OAAO,CAAEA,CAAA,GAAM1B,eAAe,CAAC,KAAK,CAAE,CAAAwB,QAAA,CACvC,OAED,CAAQ,CAAC,EACN,CACN,EACE,CACN,EACE,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}