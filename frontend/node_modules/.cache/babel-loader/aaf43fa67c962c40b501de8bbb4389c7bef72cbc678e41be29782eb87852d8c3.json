{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const UserContext=/*#__PURE__*/createContext();export const UserProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Load user from localStorage on mount\nuseEffect(()=>{const savedUser=localStorage.getItem('user');if(savedUser){try{setUser(JSON.parse(savedUser));}catch(e){console.error('Failed to parse saved user',e);localStorage.removeItem('user');}}setLoading(false);},[]);// Create or update user\nconst createUser=username=>{const newUser={id:`user-${Math.random().toString(36).substring(2,10)}`,username,createdAt:new Date().toISOString()};setUser(newUser);localStorage.setItem('user',JSON.stringify(newUser));return newUser;};// Update user properties, including team\nconst updateUser=updates=>{if(!user)return null;const updatedUser={...user,...updates};setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));return updatedUser;};// Specific function for updating team\nconst setUserTeam=async(gameId,team)=>{if(!user)return null;try{// Update on server first\nconst response=await fetch('/api/game/change-team',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({game_id:gameId,player_id:user.id,team:team})});if(!response.ok){throw new Error('Failed to update team on server');}// Update locally\nreturn updateUser({team});}catch(error){console.error('Error updating team:',error);return null;}};const logout=()=>{setUser(null);localStorage.removeItem('user');};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user,loading,createUser,updateUser,setUserTeam,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","UserContext","UserProvider","_ref","children","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","e","console","error","removeItem","createUser","username","newUser","id","Math","random","toString","substring","createdAt","Date","toISOString","setItem","stringify","updateUser","updates","updatedUser","setUserTeam","gameId","team","response","fetch","method","headers","body","game_id","player_id","ok","Error","logout","Provider","value"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/context/UserContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load user from localStorage on mount\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (e) {\r\n        console.error('Failed to parse saved user', e);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Create or update user\r\n  const createUser = (username) => {\r\n    const newUser = {\r\n      id: `user-${Math.random().toString(36).substring(2, 10)}`,\r\n      username,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    setUser(newUser);\r\n    localStorage.setItem('user', JSON.stringify(newUser));\r\n    return newUser;\r\n  };\r\n\r\n  // Update user properties, including team\r\n  const updateUser = (updates) => {\r\n    if (!user) return null;\r\n    \r\n    const updatedUser = { ...user, ...updates };\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    return updatedUser;\r\n  };\r\n\r\n  // Specific function for updating team\r\n  const setUserTeam = async (gameId, team) => {\r\n    if (!user) return null;\r\n\r\n    try {\r\n      // Update on server first\r\n      const response = await fetch('/api/game/change-team', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          game_id: gameId,\r\n          player_id: user.id,\r\n          team: team\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update team on server');\r\n      }\r\n\r\n      // Update locally\r\n      return updateUser({ team });\r\n    } catch (error) {\r\n      console.error('Error updating team:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        createUser,\r\n        updateUser,\r\n        setUserTeam,\r\n        logout\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}