{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useNavigate}from'react-router-dom';import{UserContext}from'../../context/UserContext';import{GameContext}from'../../context/GameContext';import'./style.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HomePage=()=>{const{user,createUser,updateUsername}=useContext(UserContext);const{startNewGame,joinExistingGame,error}=useContext(GameContext);const[username,setUsername]=useState((user===null||user===void 0?void 0:user.username)||'');const[gameId,setGameId]=useState('');const[team,setTeam]=useState('red');const[isJoining,setIsJoining]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const navigate=useNavigate();// Update username state when user changes\nuseEffect(()=>{if(user!==null&&user!==void 0&&user.username){setUsername(user.username);}},[user]);const handleCreateGame=async()=>{if(!username.trim())return;setIsProcessing(true);try{// Ensure we have a user\nlet currentUser=user;if(!currentUser){currentUser=createUser(username);}else if(username!==currentUser.username){currentUser=updateUsername(username);}// Now create the game\nconst game=await startNewGame(currentUser.id,username);if(game){navigate(`/game/${game.id}`);}}catch(err){console.error('Error creating game:',err);}finally{setIsProcessing(false);}};const handleJoinGame=async()=>{if(!username.trim()||!gameId)return;setIsProcessing(true);try{// Ensure we have a user\nlet currentUser=user;if(!currentUser){currentUser=createUser(username);}else if(username!==currentUser.username){currentUser=updateUsername(username);}// Now join the game\nconst game=await joinExistingGame(gameId,currentUser.id,username,team);if(game){navigate(`/game/${game.id}`);}}catch(err){console.error('Error joining game:',err);}finally{setIsProcessing(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"home-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"home-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Codenames\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Enter your name\",required:true})]}),isJoining?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"game-code\",children:\"Game Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"game-code\",value:gameId,onChange:e=>setGameId(e.target.value),placeholder:\"Enter game code\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"team\",children:\"Select Team\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"team\",value:team,onChange:e=>setTeam(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"red\",children:\"Red Team\"}),/*#__PURE__*/_jsx(\"option\",{value:\"blue\",children:\"Blue Team\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"join-btn\",onClick:handleJoinGame,disabled:!username||!gameId||isProcessing,children:isProcessing?'Joining...':'Join Game'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Want to create a new game instead?\",' ',/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsJoining(false),children:\"Create Game\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"create-btn\",onClick:handleCreateGame,disabled:!username||isProcessing,children:isProcessing?'Creating...':'Create New Game'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Have a game code?\",' ',/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsJoining(true),children:\"Join Existing Game\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]})});};export default HomePage;","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","UserContext","GameContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HomePage","user","createUser","updateUsername","startNewGame","joinExistingGame","error","username","setUsername","gameId","setGameId","team","setTeam","isJoining","setIsJoining","isProcessing","setIsProcessing","navigate","handleCreateGame","trim","currentUser","game","id","err","console","handleJoinGame","className","children","htmlFor","type","value","onChange","e","target","placeholder","required","onClick","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport './style.css';\r\n\r\nconst HomePage = () => {\r\n  const { user, createUser, updateUsername } = useContext(UserContext);\r\n  const { startNewGame, joinExistingGame, error } = useContext(GameContext);\r\n  \r\n  const [username, setUsername] = useState(user?.username || '');\r\n  const [gameId, setGameId] = useState('');\r\n  const [team, setTeam] = useState('red');\r\n  const [isJoining, setIsJoining] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Update username state when user changes\r\n  useEffect(() => {\r\n    if (user?.username) {\r\n      setUsername(user.username);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleCreateGame = async () => {\r\n    if (!username.trim()) return;\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      // Ensure we have a user\r\n      let currentUser = user;\r\n      if (!currentUser) {\r\n        currentUser = createUser(username);\r\n      } else if (username !== currentUser.username) {\r\n        currentUser = updateUsername(username);\r\n      }\r\n      \r\n      // Now create the game\r\n      const game = await startNewGame(currentUser.id, username);\r\n      if (game) {\r\n        navigate(`/game/${game.id}`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating game:', err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleJoinGame = async () => {\r\n    if (!username.trim() || !gameId) return;\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      // Ensure we have a user\r\n      let currentUser = user;\r\n      if (!currentUser) {\r\n        currentUser = createUser(username);\r\n      } else if (username !== currentUser.username) {\r\n        currentUser = updateUsername(username);\r\n      }\r\n      \r\n      // Now join the game\r\n      const game = await joinExistingGame(gameId, currentUser.id, username, team);\r\n      if (game) {\r\n        navigate(`/game/${game.id}`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error joining game:', err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-content\">\r\n        <h1>Codenames</h1>\r\n        \r\n        <div className=\"form-section\">\r\n          <label htmlFor=\"username\">Your Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter your name\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        {isJoining ? (\r\n          <>\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"game-code\">Game Code</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"game-code\"\r\n                value={gameId}\r\n                onChange={(e) => setGameId(e.target.value)}\r\n                placeholder=\"Enter game code\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"team\">Select Team</label>\r\n              <select\r\n                id=\"team\"\r\n                value={team}\r\n                onChange={(e) => setTeam(e.target.value)}\r\n              >\r\n                <option value=\"red\">Red Team</option>\r\n                <option value=\"blue\">Blue Team</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <button\r\n              className=\"join-btn\"\r\n              onClick={handleJoinGame}\r\n              disabled={!username || !gameId || isProcessing}\r\n            >\r\n              {isProcessing ? 'Joining...' : 'Join Game'}\r\n            </button>\r\n            \r\n            <p>\r\n              Want to create a new game instead?{' '}\r\n              <button onClick={() => setIsJoining(false)}>Create Game</button>\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <button\r\n              className=\"create-btn\"\r\n              onClick={handleCreateGame}\r\n              disabled={!username || isProcessing}\r\n            >\r\n              {isProcessing ? 'Creating...' : 'Create New Game'}\r\n            </button>\r\n            \r\n            <p>\r\n              Have a game code?{' '}\r\n              <button onClick={() => setIsJoining(true)}>Join Existing Game</button>\r\n            </p>\r\n          </>\r\n        )}\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}