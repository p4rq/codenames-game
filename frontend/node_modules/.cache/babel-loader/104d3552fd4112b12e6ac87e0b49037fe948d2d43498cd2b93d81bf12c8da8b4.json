{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{GameContext}from'../../context/GameContext';import{UserContext}from'../../context/UserContext';import Navbar from'../../components/Navbar';import'./style.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GamePage=()=>{var _gameState$players,_gameState$players2,_gameState$players2$f,_gameState$players3,_gameState$cards,_gameState$players4,_gameState$players4$f,_gameState$players5;const{gameId}=useParams();const navigate=useNavigate();const{user}=useContext(UserContext);const{getGameState,revealCard,setSpymaster,endTurn,error:contextError}=useContext(GameContext);const[gameState,setGameState]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[darkMode,setDarkMode]=useState(()=>{return localStorage.getItem('darkMode')==='true';});const toggleDarkMode=()=>{const newDarkMode=!darkMode;setDarkMode(newDarkMode);localStorage.setItem('darkMode',newDarkMode);if(newDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}};// Redirect if no game ID\nuseEffect(()=>{if(!gameId||gameId==='undefined'){console.error('Invalid game ID:',gameId);navigate('/');}},[gameId,navigate]);// Load game data\nuseEffect(()=>{if(!gameId||!user||gameId==='undefined')return;const fetchGameState=async()=>{setLoading(true);const data=await getGameState(gameId);if(data){setGameState(data);}setLoading(false);};fetchGameState();// Poll for updates every 3 seconds\nconst interval=setInterval(fetchGameState,3000);return()=>clearInterval(interval);},[gameId,user,getGameState]);// Clear error after 5 seconds\nuseEffect(()=>{if(error){const timer=setTimeout(()=>{setError(null);},5000);return()=>clearTimeout(timer);}},[error]);const handleCardClick=async cardId=>{if(!user||!gameState)return;// Find the current player\nconst currentPlayer=gameState.players.find(p=>p.id===user.id);if(!currentPlayer)return;// Don't allow spymasters to reveal cards\nif(currentPlayer.is_spymaster){setError(\"Spymasters can't reveal cards!\");return;}// Only allow revealing cards on your team's turn\nif(currentPlayer.team!==gameState.current_turn){setError(\"It's not your team's turn!\");return;}const updatedGame=await revealCard(gameId,cardId,user.id);if(updatedGame){setGameState(updatedGame);}};const handleSetSpymaster=async()=>{if(!user||!gameState)return;const updatedGame=await setSpymaster(gameId,user.id);if(updatedGame){setGameState(updatedGame);}};const handleEndTurn=async()=>{if(!user||!gameState)return;// Find the current player\nconst currentPlayer=gameState.players.find(p=>p.id===user.id);if(!currentPlayer)return;// Only allow ending turn on your team's turn\nif(currentPlayer.team!==gameState.current_turn){setError(\"It's not your team's turn!\");return;}const updatedGame=await endTurn(gameId,user.id);if(updatedGame){setGameState(updatedGame);}};// Find current player in game state\nconst currentPlayer=gameState===null||gameState===void 0?void 0:(_gameState$players=gameState.players)===null||_gameState$players===void 0?void 0:_gameState$players.find(p=>p.id===user.id);const isCurrentPlayerTurn=(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.team)===(gameState===null||gameState===void 0?void 0:gameState.current_turn);const isGameOver=(gameState===null||gameState===void 0?void 0:gameState.winning_team)!==null;if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading game...\"});}if(!gameState){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:\"Game not found\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{darkMode:darkMode,toggleDarkMode:toggleDarkMode,gameId:gameId}),/*#__PURE__*/_jsxs(\"div\",{className:`game-container ${darkMode?'dark-mode':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Codenames - Game \",gameId]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"teams-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`team blue ${gameState.current_turn==='blue'?'current-turn':''}`,children:[\"Blue Team: \",gameState.blue_cards_left,\" cards left\"]}),/*#__PURE__*/_jsxs(\"div\",{className:`team red ${gameState.current_turn==='red'?'current-turn':''}`,children:[\"Red Team: \",gameState.red_cards_left,\" cards left\"]})]}),gameState.winning_team&&/*#__PURE__*/_jsxs(\"div\",{className:`winner ${gameState.winning_team}`,children:[gameState.winning_team.toUpperCase(),\" TEAM WINS!\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"three-column-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-panel blue-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-header blue\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Blue Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:`team-status ${gameState.current_turn==='blue'?'active':''}`,children:[gameState.blue_cards_left,\" cards left\",gameState.current_turn==='blue'&&/*#__PURE__*/_jsx(\"span\",{className:\"turn-indicator\",children:\"Current Turn\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-players\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[gameState===null||gameState===void 0?void 0:(_gameState$players2=gameState.players)===null||_gameState$players2===void 0?void 0:(_gameState$players2$f=_gameState$players2.filter(p=>p.team==='blue'))===null||_gameState$players2$f===void 0?void 0:_gameState$players2$f.map(p=>/*#__PURE__*/_jsxs(\"li\",{className:`\n                      ${p.id===(user===null||user===void 0?void 0:user.id)?'current-player':''}\n                      ${p.is_spymaster?'spymaster':''}\n                    `,children:[p.username,p.is_spymaster&&/*#__PURE__*/_jsx(\"span\",{className:\"role-badge\",children:\"Spymaster\"}),p.id===(user===null||user===void 0?void 0:user.id)&&/*#__PURE__*/_jsx(\"span\",{className:\"you-badge\",children:\"You\"})]},p.id)),(gameState===null||gameState===void 0?void 0:(_gameState$players3=gameState.players)===null||_gameState$players3===void 0?void 0:_gameState$players3.filter(p=>p.team==='blue').length)===0&&/*#__PURE__*/_jsx(\"li\",{className:\"empty-team\",children:\"No players yet\"})]})}),(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.team)==='blue'&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-actions\",children:[!currentPlayer.is_spymaster&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"spymaster-btn\",onClick:handleSetSpymaster,children:\"Become Spymaster\"}),isCurrentPlayerTurn&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"end-turn-btn\",onClick:handleEndTurn,children:\"End Turn\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"middle-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-grid\",children:gameState===null||gameState===void 0?void 0:(_gameState$cards=gameState.cards)===null||_gameState$cards===void 0?void 0:_gameState$cards.map(card=>/*#__PURE__*/_jsx(\"div\",{className:`game-card ${card.revealed?card.type:''} ${currentPlayer!==null&&currentPlayer!==void 0&&currentPlayer.is_spymaster&&!card.revealed?`spymaster-${card.type}`:''}`,onClick:()=>!card.revealed&&!isGameOver&&handleCardClick(card.id),children:card.word},card.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"new-game-btn\",onClick:()=>window.location.href=\"/\",children:\"New Game\"}),(error||contextError)&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error||contextError})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-panel red-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-header red\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Red Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:`team-status ${gameState.current_turn==='red'?'active':''}`,children:[gameState.red_cards_left,\" cards left\",gameState.current_turn==='red'&&/*#__PURE__*/_jsx(\"span\",{className:\"turn-indicator\",children:\"Current Turn\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-players\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[gameState===null||gameState===void 0?void 0:(_gameState$players4=gameState.players)===null||_gameState$players4===void 0?void 0:(_gameState$players4$f=_gameState$players4.filter(p=>p.team==='red'))===null||_gameState$players4$f===void 0?void 0:_gameState$players4$f.map(p=>/*#__PURE__*/_jsxs(\"li\",{className:`\n                      ${p.id===(user===null||user===void 0?void 0:user.id)?'current-player':''}\n                      ${p.is_spymaster?'spymaster':''}\n                    `,children:[p.username,p.is_spymaster&&/*#__PURE__*/_jsx(\"span\",{className:\"role-badge\",children:\"Spymaster\"}),p.id===(user===null||user===void 0?void 0:user.id)&&/*#__PURE__*/_jsx(\"span\",{className:\"you-badge\",children:\"You\"})]},p.id)),(gameState===null||gameState===void 0?void 0:(_gameState$players5=gameState.players)===null||_gameState$players5===void 0?void 0:_gameState$players5.filter(p=>p.team==='red').length)===0&&/*#__PURE__*/_jsx(\"li\",{className:\"empty-team\",children:\"No players yet\"})]})}),(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.team)==='red'&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-actions\",children:[!currentPlayer.is_spymaster&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"spymaster-btn\",onClick:handleSetSpymaster,children:\"Become Spymaster\"}),isCurrentPlayerTurn&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"end-turn-btn\",onClick:handleEndTurn,children:\"End Turn\"})]})]})]})]})]});};export default GamePage;","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","useNavigate","GameContext","UserContext","Navbar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GamePage","_gameState$players","_gameState$players2","_gameState$players2$f","_gameState$players3","_gameState$cards","_gameState$players4","_gameState$players4$f","_gameState$players5","gameId","navigate","user","getGameState","revealCard","setSpymaster","endTurn","error","contextError","gameState","setGameState","loading","setLoading","setError","darkMode","setDarkMode","localStorage","getItem","toggleDarkMode","newDarkMode","setItem","document","body","classList","add","remove","console","fetchGameState","data","interval","setInterval","clearInterval","timer","setTimeout","clearTimeout","handleCardClick","cardId","currentPlayer","players","find","p","id","is_spymaster","team","current_turn","updatedGame","handleSetSpymaster","handleEndTurn","isCurrentPlayerTurn","isGameOver","winning_team","className","children","blue_cards_left","red_cards_left","toUpperCase","filter","map","username","length","onClick","cards","card","revealed","type","word","window","location","href"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/pages/Game/index.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport Navbar from '../../components/Navbar';\r\nimport './style.css';\r\n\r\nconst GamePage = () => {\r\n  const { gameId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(UserContext);\r\n  const { getGameState, revealCard, setSpymaster, endTurn, error: contextError } = useContext(GameContext);\r\n  \r\n  const [gameState, setGameState] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    return localStorage.getItem('darkMode') === 'true';\r\n  });\r\n\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !darkMode;\r\n    setDarkMode(newDarkMode);\r\n    localStorage.setItem('darkMode', newDarkMode);\r\n    if (newDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  };\r\n\r\n  // Redirect if no game ID\r\n  useEffect(() => {\r\n    if (!gameId || gameId === 'undefined') {\r\n      console.error('Invalid game ID:', gameId);\r\n      navigate('/');\r\n    }\r\n  }, [gameId, navigate]);\r\n\r\n  // Load game data\r\n  useEffect(() => {\r\n    if (!gameId || !user || gameId === 'undefined') return;\r\n\r\n    const fetchGameState = async () => {\r\n      setLoading(true);\r\n      const data = await getGameState(gameId);\r\n      if (data) {\r\n        setGameState(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchGameState();\r\n    \r\n    // Poll for updates every 3 seconds\r\n    const interval = setInterval(fetchGameState, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [gameId, user, getGameState]);\r\n\r\n  // Clear error after 5 seconds\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  const handleCardClick = async (cardId) => {\r\n    if (!user || !gameState) return;\r\n    \r\n    // Find the current player\r\n    const currentPlayer = gameState.players.find(p => p.id === user.id);\r\n    if (!currentPlayer) return;\r\n    \r\n    // Don't allow spymasters to reveal cards\r\n    if (currentPlayer.is_spymaster) {\r\n      setError(\"Spymasters can't reveal cards!\");\r\n      return;\r\n    }\r\n    \r\n    // Only allow revealing cards on your team's turn\r\n    if (currentPlayer.team !== gameState.current_turn) {\r\n      setError(\"It's not your team's turn!\");\r\n      return;\r\n    }\r\n    \r\n    const updatedGame = await revealCard(gameId, cardId, user.id);\r\n    if (updatedGame) {\r\n      setGameState(updatedGame);\r\n    }\r\n  };\r\n  \r\n  const handleSetSpymaster = async () => {\r\n    if (!user || !gameState) return;\r\n    \r\n    const updatedGame = await setSpymaster(gameId, user.id);\r\n    if (updatedGame) {\r\n      setGameState(updatedGame);\r\n    }\r\n  };\r\n  \r\n  const handleEndTurn = async () => {\r\n    if (!user || !gameState) return;\r\n    \r\n    // Find the current player\r\n    const currentPlayer = gameState.players.find(p => p.id === user.id);\r\n    if (!currentPlayer) return;\r\n    \r\n    // Only allow ending turn on your team's turn\r\n    if (currentPlayer.team !== gameState.current_turn) {\r\n      setError(\"It's not your team's turn!\");\r\n      return;\r\n    }\r\n    \r\n    const updatedGame = await endTurn(gameId, user.id);\r\n    if (updatedGame) {\r\n      setGameState(updatedGame);\r\n    }\r\n  };\r\n  \r\n  // Find current player in game state\r\n  const currentPlayer = gameState?.players?.find(p => p.id === user.id);\r\n  const isCurrentPlayerTurn = currentPlayer?.team === gameState?.current_turn;\r\n  const isGameOver = gameState?.winning_team !== null;\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading\">Loading game...</div>;\r\n  }\r\n  \r\n  if (!gameState) {\r\n    return <div className=\"error\">Game not found</div>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Navbar \r\n        darkMode={darkMode} \r\n        toggleDarkMode={toggleDarkMode} \r\n        gameId={gameId}\r\n      />\r\n      <div className={`game-container ${darkMode ? 'dark-mode' : ''}`}>\r\n        <div className=\"game-header\">\r\n          <h1>Codenames - Game {gameId}</h1>\r\n          <div className=\"game-info\">\r\n            <div className=\"teams-info\">\r\n              <div className={`team blue ${gameState.current_turn === 'blue' ? 'current-turn' : ''}`}>\r\n                Blue Team: {gameState.blue_cards_left} cards left\r\n              </div>\r\n              <div className={`team red ${gameState.current_turn === 'red' ? 'current-turn' : ''}`}>\r\n                Red Team: {gameState.red_cards_left} cards left\r\n              </div>\r\n            </div>\r\n            \r\n            {gameState.winning_team && (\r\n              <div className={`winner ${gameState.winning_team}`}>\r\n                {gameState.winning_team.toUpperCase()} TEAM WINS!\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"three-column-layout\">\r\n          {/* BLUE TEAM PANEL */}\r\n          <div className=\"team-panel blue-panel\">\r\n            <div className=\"team-header blue\">\r\n              <h2>Blue Team</h2>\r\n              <div className={`team-status ${gameState.current_turn === 'blue' ? 'active' : ''}`}>\r\n                {gameState.blue_cards_left} cards left\r\n                {gameState.current_turn === 'blue' && <span className=\"turn-indicator\">Current Turn</span>}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"team-players\">\r\n              <ul>\r\n                {gameState?.players\r\n                  ?.filter(p => p.team === 'blue')\r\n                  ?.map(p => (\r\n                    <li key={p.id} className={`\r\n                      ${p.id === user?.id ? 'current-player' : ''}\r\n                      ${p.is_spymaster ? 'spymaster' : ''}\r\n                    `}>\r\n                      {p.username} \r\n                      {p.is_spymaster && <span className=\"role-badge\">Spymaster</span>}\r\n                      {p.id === user?.id && <span className=\"you-badge\">You</span>}\r\n                    </li>\r\n                  ))}\r\n                {gameState?.players?.filter(p => p.team === 'blue').length === 0 && (\r\n                  <li className=\"empty-team\">No players yet</li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            \r\n            {currentPlayer?.team === 'blue' && (\r\n              <div className=\"team-actions\">\r\n                {!currentPlayer.is_spymaster && !isGameOver && (\r\n                  <button className=\"spymaster-btn\" onClick={handleSetSpymaster}>Become Spymaster</button>\r\n                )}\r\n                \r\n                {isCurrentPlayerTurn && !isGameOver && (\r\n                  <button className=\"end-turn-btn\" onClick={handleEndTurn}>End Turn</button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* MIDDLE SECTION - CARD GRID */}\r\n          <div className=\"middle-section\">\r\n            <div className=\"card-grid\">\r\n              {gameState?.cards?.map(card => (\r\n                <div \r\n                  key={card.id} \r\n                  className={`game-card ${card.revealed ? card.type : ''} ${currentPlayer?.is_spymaster && !card.revealed ? `spymaster-${card.type}` : ''}`}\r\n                  onClick={() => !card.revealed && !isGameOver && handleCardClick(card.id)}\r\n                >\r\n                  {card.word}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"game-controls\">\r\n              {isGameOver && (\r\n                <button className=\"new-game-btn\" onClick={() => window.location.href = \"/\"}>New Game</button>\r\n              )}\r\n              \r\n              {(error || contextError) && <div className=\"error-message\">{error || contextError}</div>}\r\n            </div>\r\n          </div>\r\n\r\n          {/* RED TEAM PANEL */}\r\n          <div className=\"team-panel red-panel\">\r\n            <div className=\"team-header red\">\r\n              <h2>Red Team</h2>\r\n              <div className={`team-status ${gameState.current_turn === 'red' ? 'active' : ''}`}>\r\n                {gameState.red_cards_left} cards left\r\n                {gameState.current_turn === 'red' && <span className=\"turn-indicator\">Current Turn</span>}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"team-players\">\r\n              <ul>\r\n                {gameState?.players\r\n                  ?.filter(p => p.team === 'red')\r\n                  ?.map(p => (\r\n                    <li key={p.id} className={`\r\n                      ${p.id === user?.id ? 'current-player' : ''}\r\n                      ${p.is_spymaster ? 'spymaster' : ''}\r\n                    `}>\r\n                      {p.username}\r\n                      {p.is_spymaster && <span className=\"role-badge\">Spymaster</span>}\r\n                      {p.id === user?.id && <span className=\"you-badge\">You</span>}\r\n                    </li>\r\n                  ))}\r\n                {gameState?.players?.filter(p => p.team === 'red').length === 0 && (\r\n                  <li className=\"empty-team\">No players yet</li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            \r\n            {currentPlayer?.team === 'red' && (\r\n              <div className=\"team-actions\">\r\n                {!currentPlayer.is_spymaster && !isGameOver && (\r\n                  <button className=\"spymaster-btn\" onClick={handleSetSpymaster}>Become Spymaster</button>\r\n                )}\r\n                \r\n                {isCurrentPlayerTurn && !isGameOver && (\r\n                  <button className=\"end-turn-btn\" onClick={handleEndTurn}>End Turn</button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}