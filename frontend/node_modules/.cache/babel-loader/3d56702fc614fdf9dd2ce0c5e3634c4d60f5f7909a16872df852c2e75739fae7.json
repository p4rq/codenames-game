{"ast":null,"code":"import React,{useState,useEffect,useContext,useRef}from'react';import{UserContext}from'../../context/UserContext';import{GameContext}from'../../context/GameContext';import{getMessages,sendMessage}from'../../services/chatService';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=_ref=>{let{gameId,team}=_ref;const{user}=useContext(UserContext);const{game}=useContext(GameContext);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[canAccess,setCanAccess]=useState(false);// New state to track access\nconst messagesEndRef=useRef(null);// Debug log to see the user and team values\nuseEffect(()=>{console.log(\"Chat component user:\",user);console.log(\"Chat component team:\",team);},[user,team]);// Evaluate access when user or team changes\nuseEffect(()=>{// Calculate if user can access this chat\nconst hasAccess=checkChatAccess();setCanAccess(hasAccess);// If access changed from false to true, fetch messages\nif(hasAccess&&gameId){fetchChatMessages();}},[user,team,game]);// Re-evaluate when user, team, or game changes\n// Fetch messages on mount and periodically\nuseEffect(()=>{if(!gameId||!canAccess)return;fetchChatMessages();// Set up polling only if user has access\nconst interval=setInterval(fetchChatMessages,3000);return()=>clearInterval(interval);},[gameId,team,canAccess]);// Add canAccess as dependency\nconst fetchChatMessages=async()=>{try{const data=await getMessages(gameId,team);setMessages(data||[]);setError(null);}catch(err){console.error('Failed to load messages:',err);setError('Failed to load messages');}};// Scroll to bottom when messages update\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);const handleSendMessage=async e=>{e.preventDefault();if(!newMessage.trim()||!user||!gameId)return;setLoading(true);try{await sendMessage(newMessage,user.id,user.username,gameId,team);setNewMessage('');// Fetch updated messages\nfetchChatMessages();}catch(err){setError('Failed to send message');console.error(err);}finally{setLoading(false);}};// Update the canAccessChat function to be more reliable\nconst checkChatAccess=()=>{// Debug logging\nconsole.log(\"canAccessChat check:\",{user,userTeam:user===null||user===void 0?void 0:user.team,chatTeam:team,role:user===null||user===void 0?void 0:user.role});if(!team){// Everyone can access the general chat\nreturn true;}if(!user){// No user means no access to team chats\nreturn false;}// Try to get user's team from different sources\nlet userTeam=user.team;if(!userTeam&&game&&game.players){// Find the user in the game's players\nconst playerInGame=game.players.find(p=>p.id===user.id);if(playerInGame){userTeam=playerInGame.team;}}// Another fallback - check localStorage directly\nif(!userTeam){try{const storedUser=JSON.parse(localStorage.getItem('user'));if(storedUser&&storedUser.team){userTeam=storedUser.team;}}catch(e){console.error(\"Error parsing user from localStorage:\",e);}}if(!userTeam){console.log(\"User has no team - denying access to team chat\");return false;}// Convert to lowercase for case-insensitive comparison\nconst normalizedUserTeam=userTeam.toLowerCase();const normalizedChatTeam=team.toLowerCase();// Spymasters can access all team chats\nif(user.role==='SPYMASTER'){return true;}// Users can only access their own team's chat\nconst hasAccess=normalizedUserTeam===normalizedChatTeam;console.log(`Team comparison: user=${normalizedUserTeam}, chat=${normalizedChatTeam}, access=${hasAccess}`);return hasAccess;};return/*#__PURE__*/_jsxs(\"div\",{className:`chat-container ${team?`team-${team.toLowerCase()}`:''}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:team?`${team} Team Chat`:'Game Chat'}),!canAccess?/*#__PURE__*/_jsx(\"p\",{className:\"access-denied\",children:\"You don't have access to this team's chat\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-messages\",children:\"No messages yet\"}):messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.sender_id===(user===null||user===void 0?void 0:user.id)?'own-message':''}`,children:[/*#__PURE__*/_jsxs(\"span\",{className:\"message-username\",children:[msg.username,\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"message-content\",children:msg.content}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date(msg.timestamp).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})})]},msg.id||`${msg.sender_id}-${msg.timestamp}`)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"message-form\",onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type a message...\",disabled:loading||!user}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!newMessage.trim()||!user,children:\"Send\"})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","UserContext","GameContext","getMessages","sendMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","_ref","gameId","team","user","game","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","canAccess","setCanAccess","messagesEndRef","console","log","hasAccess","checkChatAccess","fetchChatMessages","interval","setInterval","clearInterval","data","err","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","id","username","userTeam","chatTeam","role","players","playerInGame","find","p","storedUser","JSON","parse","localStorage","getItem","normalizedUserTeam","toLowerCase","normalizedChatTeam","className","children","length","map","msg","sender_id","content","Date","timestamp","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/components/Chat/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport { getMessages, sendMessage } from '../../services/chatService';\r\nimport './Chat.css';\r\n\r\nconst Chat = ({ gameId, team }) => {\r\n  const { user } = useContext(UserContext);\r\n  const { game } = useContext(GameContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [canAccess, setCanAccess] = useState(false); // New state to track access\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // Debug log to see the user and team values\r\n  useEffect(() => {\r\n    console.log(\"Chat component user:\", user);\r\n    console.log(\"Chat component team:\", team);\r\n  }, [user, team]);\r\n  \r\n  // Evaluate access when user or team changes\r\n  useEffect(() => {\r\n    // Calculate if user can access this chat\r\n    const hasAccess = checkChatAccess();\r\n    setCanAccess(hasAccess);\r\n    \r\n    // If access changed from false to true, fetch messages\r\n    if (hasAccess && gameId) {\r\n      fetchChatMessages();\r\n    }\r\n  }, [user, team, game]); // Re-evaluate when user, team, or game changes\r\n  \r\n  // Fetch messages on mount and periodically\r\n  useEffect(() => {\r\n    if (!gameId || !canAccess) return;\r\n    \r\n    fetchChatMessages();\r\n    \r\n    // Set up polling only if user has access\r\n    const interval = setInterval(fetchChatMessages, 3000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [gameId, team, canAccess]); // Add canAccess as dependency\r\n  \r\n  const fetchChatMessages = async () => {\r\n    try {\r\n      const data = await getMessages(gameId, team);\r\n      setMessages(data || []);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Failed to load messages:', err);\r\n      setError('Failed to load messages');\r\n    }\r\n  };\r\n  \r\n  // Scroll to bottom when messages update\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newMessage.trim() || !user || !gameId) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      await sendMessage(newMessage, user.id, user.username, gameId, team);\r\n      setNewMessage('');\r\n      \r\n      // Fetch updated messages\r\n      fetchChatMessages();\r\n    } catch (err) {\r\n      setError('Failed to send message');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update the canAccessChat function to be more reliable\r\n  const checkChatAccess = () => {\r\n    // Debug logging\r\n    console.log(\"canAccessChat check:\", {\r\n      user,\r\n      userTeam: user?.team,\r\n      chatTeam: team,\r\n      role: user?.role\r\n    });\r\n    \r\n    if (!team) {\r\n      // Everyone can access the general chat\r\n      return true;\r\n    }\r\n    \r\n    if (!user) {\r\n      // No user means no access to team chats\r\n      return false;\r\n    }\r\n    \r\n    // Try to get user's team from different sources\r\n    let userTeam = user.team;\r\n    if (!userTeam && game && game.players) {\r\n      // Find the user in the game's players\r\n      const playerInGame = game.players.find(p => p.id === user.id);\r\n      if (playerInGame) {\r\n        userTeam = playerInGame.team;\r\n      }\r\n    }\r\n    \r\n    // Another fallback - check localStorage directly\r\n    if (!userTeam) {\r\n      try {\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        if (storedUser && storedUser.team) {\r\n          userTeam = storedUser.team;\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error parsing user from localStorage:\", e);\r\n      }\r\n    }\r\n    \r\n    if (!userTeam) {\r\n      console.log(\"User has no team - denying access to team chat\");\r\n      return false;\r\n    }\r\n    \r\n    // Convert to lowercase for case-insensitive comparison\r\n    const normalizedUserTeam = userTeam.toLowerCase();\r\n    const normalizedChatTeam = team.toLowerCase();\r\n    \r\n    // Spymasters can access all team chats\r\n    if (user.role === 'SPYMASTER') {\r\n      return true;\r\n    }\r\n    \r\n    // Users can only access their own team's chat\r\n    const hasAccess = normalizedUserTeam === normalizedChatTeam;\r\n    console.log(`Team comparison: user=${normalizedUserTeam}, chat=${normalizedChatTeam}, access=${hasAccess}`);\r\n    return hasAccess;\r\n  };\r\n  \r\n  return (\r\n    <div className={`chat-container ${team ? `team-${team.toLowerCase()}` : ''}`}>\r\n      <h3>{team ? `${team} Team Chat` : 'Game Chat'}</h3>\r\n      \r\n      {!canAccess ? (\r\n        <p className=\"access-denied\">You don't have access to this team's chat</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"messages-container\">\r\n            {messages.length === 0 ? (\r\n              <p className=\"no-messages\">No messages yet</p>\r\n            ) : (\r\n              messages.map((msg) => (\r\n                <div \r\n                  key={msg.id || `${msg.sender_id}-${msg.timestamp}`} \r\n                  className={`message ${msg.sender_id === user?.id ? 'own-message' : ''}`}\r\n                >\r\n                  <span className=\"message-username\">{msg.username}:</span>\r\n                  <span className=\"message-content\">{msg.content}</span>\r\n                  <span className=\"message-time\">\r\n                    {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                </div>\r\n              ))\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n            \r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n          \r\n          <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              disabled={loading || !user}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading || !newMessage.trim() || !user}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}