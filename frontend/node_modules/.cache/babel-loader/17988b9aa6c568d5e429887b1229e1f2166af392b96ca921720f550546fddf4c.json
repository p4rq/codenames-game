{"ast":null,"code":"import React,{useContext,useEffect,useState,useRef}from'react';import{useParams,useNavigate}from'react-router-dom';import{GameContext}from'../../context/GameContext';import{UserContext}from'../../context/UserContext';import Navbar from'../../components/Navbar';import Chat from'../../components/Chat';import'./style.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GamePage=()=>{var _gameState$players,_gameState$players2,_gameState$players2$f,_gameState$players3,_gameState$cards,_gameState$players4,_gameState$players4$f,_gameState$players5;const{gameId}=useParams();const navigate=useNavigate();const{user}=useContext(UserContext);const{getGameState,revealCard,setSpymaster,endTurn,error:contextError}=useContext(GameContext);const[gameState,setGameState]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[darkMode,setDarkMode]=useState(()=>{return localStorage.getItem('darkMode')==='true';});// Add WebSocket connection ref\nconst socketRef=useRef(null);const[isConnected,setIsConnected]=useState(false);const toggleDarkMode=()=>{const newDarkMode=!darkMode;setDarkMode(newDarkMode);localStorage.setItem('darkMode',newDarkMode);if(newDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}};// Redirect if no game ID\nuseEffect(()=>{if(!gameId||gameId==='undefined'){console.error('Invalid game ID:',gameId);navigate('/');}},[gameId,navigate]);// Set up WebSocket connection\nuseEffect(()=>{if(!gameId||!user||gameId==='undefined')return;// Initial game state load\nconst fetchInitialGameState=async()=>{setLoading(true);const data=await getGameState(gameId);if(data){setGameState(data);}setLoading(false);};fetchInitialGameState();// Create WebSocket connection\nconst protocol=window.location.protocol==='https:'?'wss':'ws';const host=window.location.host;const wsUrl=`${protocol}://${host}/ws/game/${gameId}?client_id=${user.id}`;const socket=new WebSocket(wsUrl);socketRef.current=socket;// Connection opened\nsocket.addEventListener('open',event=>{console.log('WebSocket connection established');setIsConnected(true);});// Listen for messages\nsocket.addEventListener('message',event=>{try{const data=JSON.parse(event.data);console.log('WebSocket message received:',data);setGameState(data);}catch(err){console.error('Error parsing WebSocket message:',err);}});// Connection closed\nsocket.addEventListener('close',event=>{console.log('WebSocket connection closed');setIsConnected(false);// Try to reconnect after a delay\nsetTimeout(()=>{if(socketRef.current===socket){// Only reconnect if this is still the current socket\nconsole.log('Attempting to reconnect WebSocket...');// The effect will run again and create a new connection\nsetIsConnected(false);}},3000);});// Connection error\nsocket.addEventListener('error',event=>{console.error('WebSocket error:',event);setError('Lost connection to the game server. Trying to reconnect...');});// Clean up\nreturn()=>{console.log('Closing WebSocket connection');if(socket.readyState===WebSocket.OPEN||socket.readyState===WebSocket.CONNECTING){socket.close();}socketRef.current=null;};},[gameId,user,getGameState]);// Clear error after 5 seconds\nuseEffect(()=>{if(error){const timer=setTimeout(()=>{setError(null);},5000);return()=>clearTimeout(timer);}},[error]);const handleCardClick=async cardId=>{if(!user||!gameState)return;// Find the current player\nconst currentPlayer=gameState.players.find(p=>p.id===user.id);if(!currentPlayer)return;// Don't allow spymasters to reveal cards\nif(currentPlayer.is_spymaster){setError(\"Spymasters can't reveal cards!\");return;}// Only allow revealing cards on your team's turn\nif(currentPlayer.team!==gameState.current_turn){setError(\"It's not your team's turn!\");return;}// Optimistically update the UI\nconst optimisticUpdate={...gameState,cards:gameState.cards.map(c=>c.id===cardId?{...c,revealed:true}:c)};setGameState(optimisticUpdate);// Call the API\nconst updatedGame=await revealCard(gameId,cardId,user.id);if(updatedGame){// WebSocket will handle the update, but just in case:\nsetGameState(updatedGame);}};// Same optimistic updates for other actions\nconst handleSetSpymaster=async()=>{if(!user||!gameState)return;// Optimistic update\nconst optimisticUpdate={...gameState,players:gameState.players.map(p=>p.id===user.id?{...p,is_spymaster:true}:p)};setGameState(optimisticUpdate);const updatedGame=await setSpymaster(gameId,user.id);if(updatedGame){setGameState(updatedGame);}};const handleEndTurn=async()=>{if(!user||!gameState)return;// Find the current player\nconst currentPlayer=gameState.players.find(p=>p.id===user.id);if(!currentPlayer)return;// Only allow ending turn on your team's turn\nif(currentPlayer.team!==gameState.current_turn){setError(\"It's not your team's turn!\");return;}// Optimistic update\nconst newTurn=gameState.current_turn==='red'?'blue':'red';const optimisticUpdate={...gameState,current_turn:newTurn};setGameState(optimisticUpdate);const updatedGame=await endTurn(gameId,user.id);if(updatedGame){setGameState(updatedGame);}};// Find current player in game state\nconst currentPlayer=gameState===null||gameState===void 0?void 0:(_gameState$players=gameState.players)===null||_gameState$players===void 0?void 0:_gameState$players.find(p=>p.id===user.id);const isCurrentPlayerTurn=(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.team)===(gameState===null||gameState===void 0?void 0:gameState.current_turn);const isGameOver=(gameState===null||gameState===void 0?void 0:gameState.winning_team)!==null;if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading game...\"});}if(!gameState){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:\"Game not found\"});}// Rest of your component remains the same\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{darkMode:darkMode,toggleDarkMode:toggleDarkMode,gameId:gameId}),/*#__PURE__*/_jsxs(\"div\",{className:`game-container ${darkMode?'dark-mode':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:`connection-status ${isConnected?'connected':'disconnected'}`,children:isConnected?/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDFE2 Connected\"}):/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDD34 Connecting...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Codenames - Game \",gameId]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"teams-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`team blue ${gameState.current_turn==='blue'?'current-turn':''}`,children:[\"Blue Team: \",gameState.blue_cards_left,\" cards left\"]}),/*#__PURE__*/_jsxs(\"div\",{className:`team red ${gameState.current_turn==='red'?'current-turn':''}`,children:[\"Red Team: \",gameState.red_cards_left,\" cards left\"]})]}),gameState.winning_team&&/*#__PURE__*/_jsxs(\"div\",{className:`winner ${gameState.winning_team}`,children:[gameState.winning_team.toUpperCase(),\" TEAM WINS!\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"game-layout\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"three-column-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-section blue-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-panel blue-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-header blue\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Blue Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:`team-status ${gameState.current_turn==='blue'?'active':''}`,children:[gameState.blue_cards_left,\" cards left\",gameState.current_turn==='blue'&&/*#__PURE__*/_jsx(\"span\",{className:\"turn-indicator\",children:\"Current Turn\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-players\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[gameState===null||gameState===void 0?void 0:(_gameState$players2=gameState.players)===null||_gameState$players2===void 0?void 0:(_gameState$players2$f=_gameState$players2.filter(p=>p.team==='blue'))===null||_gameState$players2$f===void 0?void 0:_gameState$players2$f.map(p=>/*#__PURE__*/_jsxs(\"li\",{className:`\n                          ${p.id===(user===null||user===void 0?void 0:user.id)?'current-player':''}\n                          ${p.is_spymaster?'spymaster':''}\n                        `,children:[p.username,p.is_spymaster&&/*#__PURE__*/_jsx(\"span\",{className:\"role-badge\",children:\"Spymaster\"}),p.id===(user===null||user===void 0?void 0:user.id)&&/*#__PURE__*/_jsx(\"span\",{className:\"you-badge\",children:\"You\"})]},p.id)),(gameState===null||gameState===void 0?void 0:(_gameState$players3=gameState.players)===null||_gameState$players3===void 0?void 0:_gameState$players3.filter(p=>p.team==='blue').length)===0&&/*#__PURE__*/_jsx(\"li\",{className:\"empty-team\",children:\"No players yet\"})]})}),(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.team)==='blue'&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-actions\",children:[!currentPlayer.is_spymaster&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"spymaster-btn\",onClick:handleSetSpymaster,children:\"Become Spymaster\"}),isCurrentPlayerTurn&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"end-turn-btn\",onClick:handleEndTurn,children:\"End Turn\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-chat blue-chat\",children:/*#__PURE__*/_jsx(Chat,{gameId:gameId,team:\"blue\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"middle-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-grid\",children:gameState===null||gameState===void 0?void 0:(_gameState$cards=gameState.cards)===null||_gameState$cards===void 0?void 0:_gameState$cards.map(card=>/*#__PURE__*/_jsx(\"div\",{className:`game-card ${card.revealed?card.type:''} ${currentPlayer!==null&&currentPlayer!==void 0&&currentPlayer.is_spymaster&&!card.revealed?`spymaster-${card.type}`:''}`,onClick:()=>!card.revealed&&!isGameOver&&handleCardClick(card.id),children:card.word},card.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"new-game-btn\",onClick:()=>window.location.href=\"/\",children:\"New Game\"}),(error||contextError)&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error||contextError})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-section red-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-panel red-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-header red\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Red Team\"}),/*#__PURE__*/_jsxs(\"div\",{className:`team-status ${gameState.current_turn==='red'?'active':''}`,children:[gameState.red_cards_left,\" cards left\",gameState.current_turn==='red'&&/*#__PURE__*/_jsx(\"span\",{className:\"turn-indicator\",children:\"Current Turn\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-players\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[gameState===null||gameState===void 0?void 0:(_gameState$players4=gameState.players)===null||_gameState$players4===void 0?void 0:(_gameState$players4$f=_gameState$players4.filter(p=>p.team==='red'))===null||_gameState$players4$f===void 0?void 0:_gameState$players4$f.map(p=>/*#__PURE__*/_jsxs(\"li\",{className:`\n                          ${p.id===(user===null||user===void 0?void 0:user.id)?'current-player':''}\n                          ${p.is_spymaster?'spymaster':''}\n                        `,children:[p.username,p.is_spymaster&&/*#__PURE__*/_jsx(\"span\",{className:\"role-badge\",children:\"Spymaster\"}),p.id===(user===null||user===void 0?void 0:user.id)&&/*#__PURE__*/_jsx(\"span\",{className:\"you-badge\",children:\"You\"})]},p.id)),(gameState===null||gameState===void 0?void 0:(_gameState$players5=gameState.players)===null||_gameState$players5===void 0?void 0:_gameState$players5.filter(p=>p.team==='red').length)===0&&/*#__PURE__*/_jsx(\"li\",{className:\"empty-team\",children:\"No players yet\"})]})}),(currentPlayer===null||currentPlayer===void 0?void 0:currentPlayer.team)==='red'&&/*#__PURE__*/_jsxs(\"div\",{className:\"team-actions\",children:[!currentPlayer.is_spymaster&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"spymaster-btn\",onClick:handleSetSpymaster,children:\"Become Spymaster\"}),isCurrentPlayerTurn&&!isGameOver&&/*#__PURE__*/_jsx(\"button\",{className:\"end-turn-btn\",onClick:handleEndTurn,children:\"End Turn\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-chat red-chat\",children:/*#__PURE__*/_jsx(Chat,{gameId:gameId,team:\"red\"})})]})]})})]})]});};export default GamePage;","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useParams","useNavigate","GameContext","UserContext","Navbar","Chat","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GamePage","_gameState$players","_gameState$players2","_gameState$players2$f","_gameState$players3","_gameState$cards","_gameState$players4","_gameState$players4$f","_gameState$players5","gameId","navigate","user","getGameState","revealCard","setSpymaster","endTurn","error","contextError","gameState","setGameState","loading","setLoading","setError","darkMode","setDarkMode","localStorage","getItem","socketRef","isConnected","setIsConnected","toggleDarkMode","newDarkMode","setItem","document","body","classList","add","remove","console","fetchInitialGameState","data","protocol","window","location","host","wsUrl","id","socket","WebSocket","current","addEventListener","event","log","JSON","parse","err","setTimeout","readyState","OPEN","CONNECTING","close","timer","clearTimeout","handleCardClick","cardId","currentPlayer","players","find","p","is_spymaster","team","current_turn","optimisticUpdate","cards","map","c","revealed","updatedGame","handleSetSpymaster","handleEndTurn","newTurn","isCurrentPlayerTurn","isGameOver","winning_team","className","children","blue_cards_left","red_cards_left","toUpperCase","filter","username","length","onClick","card","type","word","href"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/pages/Game/index.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport Navbar from '../../components/Navbar';\r\nimport Chat from '../../components/Chat';\r\nimport './style.css';\r\n\r\nconst GamePage = () => {\r\n  const { gameId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(UserContext);\r\n  const { getGameState, revealCard, setSpymaster, endTurn, error: contextError } = useContext(GameContext);\r\n  \r\n  const [gameState, setGameState] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    return localStorage.getItem('darkMode') === 'true';\r\n  });\r\n  \r\n  // Add WebSocket connection ref\r\n  const socketRef = useRef(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !darkMode;\r\n    setDarkMode(newDarkMode);\r\n    localStorage.setItem('darkMode', newDarkMode);\r\n    if (newDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  };\r\n\r\n  // Redirect if no game ID\r\n  useEffect(() => {\r\n    if (!gameId || gameId === 'undefined') {\r\n      console.error('Invalid game ID:', gameId);\r\n      navigate('/');\r\n    }\r\n  }, [gameId, navigate]);\r\n\r\n  // Set up WebSocket connection\r\n  useEffect(() => {\r\n    if (!gameId || !user || gameId === 'undefined') return;\r\n\r\n    // Initial game state load\r\n    const fetchInitialGameState = async () => {\r\n      setLoading(true);\r\n      const data = await getGameState(gameId);\r\n      if (data) {\r\n        setGameState(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchInitialGameState();\r\n\r\n    // Create WebSocket connection\r\n    const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\r\n    const host = window.location.host;\r\n    const wsUrl = `${protocol}://${host}/ws/game/${gameId}?client_id=${user.id}`;\r\n    \r\n    const socket = new WebSocket(wsUrl);\r\n    socketRef.current = socket;\r\n    \r\n    // Connection opened\r\n    socket.addEventListener('open', (event) => {\r\n      console.log('WebSocket connection established');\r\n      setIsConnected(true);\r\n    });\r\n\r\n    // Listen for messages\r\n    socket.addEventListener('message', (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        console.log('WebSocket message received:', data);\r\n        setGameState(data);\r\n      } catch (err) {\r\n        console.error('Error parsing WebSocket message:', err);\r\n      }\r\n    });\r\n\r\n    // Connection closed\r\n    socket.addEventListener('close', (event) => {\r\n      console.log('WebSocket connection closed');\r\n      setIsConnected(false);\r\n      \r\n      // Try to reconnect after a delay\r\n      setTimeout(() => {\r\n        if (socketRef.current === socket) { // Only reconnect if this is still the current socket\r\n          console.log('Attempting to reconnect WebSocket...');\r\n          // The effect will run again and create a new connection\r\n          setIsConnected(false);\r\n        }\r\n      }, 3000);\r\n    });\r\n\r\n    // Connection error\r\n    socket.addEventListener('error', (event) => {\r\n      console.error('WebSocket error:', event);\r\n      setError('Lost connection to the game server. Trying to reconnect...');\r\n    });\r\n\r\n    // Clean up\r\n    return () => {\r\n      console.log('Closing WebSocket connection');\r\n      if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\r\n        socket.close();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [gameId, user, getGameState]);\r\n\r\n  // Clear error after 5 seconds\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  const handleCardClick = async (cardId) => {\r\n    if (!user || !gameState) return;\r\n    \r\n    // Find the current player\r\n    const currentPlayer = gameState.players.find(p => p.id === user.id);\r\n    if (!currentPlayer) return;\r\n    \r\n    // Don't allow spymasters to reveal cards\r\n    if (currentPlayer.is_spymaster) {\r\n      setError(\"Spymasters can't reveal cards!\");\r\n      return;\r\n    }\r\n    \r\n    // Only allow revealing cards on your team's turn\r\n    if (currentPlayer.team !== gameState.current_turn) {\r\n      setError(\"It's not your team's turn!\");\r\n      return;\r\n    }\r\n    \r\n    // Optimistically update the UI\r\n    const optimisticUpdate = {\r\n      ...gameState,\r\n      cards: gameState.cards.map(c => \r\n        c.id === cardId ? { ...c, revealed: true } : c\r\n      )\r\n    };\r\n    setGameState(optimisticUpdate);\r\n    \r\n    // Call the API\r\n    const updatedGame = await revealCard(gameId, cardId, user.id);\r\n    if (updatedGame) {\r\n      // WebSocket will handle the update, but just in case:\r\n      setGameState(updatedGame);\r\n    }\r\n  };\r\n  \r\n  // Same optimistic updates for other actions\r\n  const handleSetSpymaster = async () => {\r\n    if (!user || !gameState) return;\r\n    \r\n    // Optimistic update\r\n    const optimisticUpdate = {\r\n      ...gameState,\r\n      players: gameState.players.map(p => \r\n        p.id === user.id ? { ...p, is_spymaster: true } : p\r\n      )\r\n    };\r\n    setGameState(optimisticUpdate);\r\n    \r\n    const updatedGame = await setSpymaster(gameId, user.id);\r\n    if (updatedGame) {\r\n      setGameState(updatedGame);\r\n    }\r\n  };\r\n  \r\n  const handleEndTurn = async () => {\r\n    if (!user || !gameState) return;\r\n    \r\n    // Find the current player\r\n    const currentPlayer = gameState.players.find(p => p.id === user.id);\r\n    if (!currentPlayer) return;\r\n    \r\n    // Only allow ending turn on your team's turn\r\n    if (currentPlayer.team !== gameState.current_turn) {\r\n      setError(\"It's not your team's turn!\");\r\n      return;\r\n    }\r\n    \r\n    // Optimistic update\r\n    const newTurn = gameState.current_turn === 'red' ? 'blue' : 'red';\r\n    const optimisticUpdate = {\r\n      ...gameState,\r\n      current_turn: newTurn\r\n    };\r\n    setGameState(optimisticUpdate);\r\n    \r\n    const updatedGame = await endTurn(gameId, user.id);\r\n    if (updatedGame) {\r\n      setGameState(updatedGame);\r\n    }\r\n  };\r\n  \r\n  // Find current player in game state\r\n  const currentPlayer = gameState?.players?.find(p => p.id === user.id);\r\n  const isCurrentPlayerTurn = currentPlayer?.team === gameState?.current_turn;\r\n  const isGameOver = gameState?.winning_team !== null;\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading\">Loading game...</div>;\r\n  }\r\n  \r\n  if (!gameState) {\r\n    return <div className=\"error\">Game not found</div>;\r\n  }\r\n  \r\n  // Rest of your component remains the same\r\n  return (\r\n    <>\r\n      <Navbar \r\n        darkMode={darkMode} \r\n        toggleDarkMode={toggleDarkMode} \r\n        gameId={gameId}\r\n      />\r\n      <div className={`game-container ${darkMode ? 'dark-mode' : ''}`}>\r\n        {/* Connection status indicator */}\r\n        <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n          {isConnected ? (\r\n            <span>🟢 Connected</span>\r\n          ) : (\r\n            <span>🔴 Connecting...</span>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Rest of your existing UI */}\r\n        <div className=\"game-header\">\r\n          <h1>Codenames - Game {gameId}</h1>\r\n          <div className=\"game-info\">\r\n            <div className=\"teams-info\">\r\n              <div className={`team blue ${gameState.current_turn === 'blue' ? 'current-turn' : ''}`}>\r\n                Blue Team: {gameState.blue_cards_left} cards left\r\n              </div>\r\n              <div className={`team red ${gameState.current_turn === 'red' ? 'current-turn' : ''}`}>\r\n                Red Team: {gameState.red_cards_left} cards left\r\n              </div>\r\n            </div>\r\n            \r\n            {gameState.winning_team && (\r\n              <div className={`winner ${gameState.winning_team}`}>\r\n                {gameState.winning_team.toUpperCase()} TEAM WINS!\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"game-layout\">\r\n          <div className=\"three-column-layout\">\r\n            {/* BLUE TEAM PANEL WITH CHAT */}\r\n            <div className=\"team-section blue-section\">\r\n              <div className=\"team-panel blue-panel\">\r\n                <div className=\"team-header blue\">\r\n                  <h2>Blue Team</h2>\r\n                  <div className={`team-status ${gameState.current_turn === 'blue' ? 'active' : ''}`}>\r\n                    {gameState.blue_cards_left} cards left\r\n                    {gameState.current_turn === 'blue' && <span className=\"turn-indicator\">Current Turn</span>}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"team-players\">\r\n                  <ul>\r\n                    {gameState?.players\r\n                      ?.filter(p => p.team === 'blue')\r\n                      ?.map(p => (\r\n                        <li key={p.id} className={`\r\n                          ${p.id === user?.id ? 'current-player' : ''}\r\n                          ${p.is_spymaster ? 'spymaster' : ''}\r\n                        `}>\r\n                          {p.username} \r\n                          {p.is_spymaster && <span className=\"role-badge\">Spymaster</span>}\r\n                          {p.id === user?.id && <span className=\"you-badge\">You</span>}\r\n                        </li>\r\n                      ))}\r\n                    {gameState?.players?.filter(p => p.team === 'blue').length === 0 && (\r\n                      <li className=\"empty-team\">No players yet</li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                \r\n                {currentPlayer?.team === 'blue' && (\r\n                  <div className=\"team-actions\">\r\n                    {!currentPlayer.is_spymaster && !isGameOver && (\r\n                      <button className=\"spymaster-btn\" onClick={handleSetSpymaster}>Become Spymaster</button>\r\n                    )}\r\n                    \r\n                    {isCurrentPlayerTurn && !isGameOver && (\r\n                      <button className=\"end-turn-btn\" onClick={handleEndTurn}>End Turn</button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Blue team chat directly below blue team panel */}\r\n              <div className=\"team-chat blue-chat\">\r\n                <Chat gameId={gameId} team=\"blue\" />\r\n              </div>\r\n            </div>\r\n\r\n            {/* MIDDLE SECTION - CARD GRID */}\r\n            <div className=\"middle-section\">\r\n              <div className=\"card-grid\">\r\n                {gameState?.cards?.map(card => (\r\n                  <div \r\n                    key={card.id} \r\n                    className={`game-card ${card.revealed ? card.type : ''} ${currentPlayer?.is_spymaster && !card.revealed ? `spymaster-${card.type}` : ''}`}\r\n                    onClick={() => !card.revealed && !isGameOver && handleCardClick(card.id)}\r\n                  >\r\n                    {card.word}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"game-controls\">\r\n                {isGameOver && (\r\n                  <button className=\"new-game-btn\" onClick={() => window.location.href = \"/\"}>New Game</button>\r\n                )}\r\n                \r\n                {(error || contextError) && <div className=\"error-message\">{error || contextError}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            {/* RED TEAM PANEL WITH CHAT */}\r\n            <div className=\"team-section red-section\">\r\n              <div className=\"team-panel red-panel\">\r\n                <div className=\"team-header red\">\r\n                  <h2>Red Team</h2>\r\n                  <div className={`team-status ${gameState.current_turn === 'red' ? 'active' : ''}`}>\r\n                    {gameState.red_cards_left} cards left\r\n                    {gameState.current_turn === 'red' && <span className=\"turn-indicator\">Current Turn</span>}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"team-players\">\r\n                  <ul>\r\n                    {gameState?.players\r\n                      ?.filter(p => p.team === 'red')\r\n                      ?.map(p => (\r\n                        <li key={p.id} className={`\r\n                          ${p.id === user?.id ? 'current-player' : ''}\r\n                          ${p.is_spymaster ? 'spymaster' : ''}\r\n                        `}>\r\n                          {p.username}\r\n                          {p.is_spymaster && <span className=\"role-badge\">Spymaster</span>}\r\n                          {p.id === user?.id && <span className=\"you-badge\">You</span>}\r\n                        </li>\r\n                      ))}\r\n                    {gameState?.players?.filter(p => p.team === 'red').length === 0 && (\r\n                      <li className=\"empty-team\">No players yet</li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                \r\n                {currentPlayer?.team === 'red' && (\r\n                  <div className=\"team-actions\">\r\n                    {!currentPlayer.is_spymaster && !isGameOver && (\r\n                      <button className=\"spymaster-btn\" onClick={handleSetSpymaster}>Become Spymaster</button>\r\n                    )}\r\n                    \r\n                    {isCurrentPlayerTurn && !isGameOver && (\r\n                      <button className=\"end-turn-btn\" onClick={handleEndTurn}>End Turn</button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Red team chat directly below red team panel */}\r\n              <div className=\"team-chat red-chat\">\r\n                <Chat gameId={gameId} team=\"red\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CACtE,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,OAASC,WAAW,KAAQ,2BAA2B,CACvD,MAAO,CAAAC,MAAM,KAAM,yBAAyB,CAC5C,MAAO,CAAAC,IAAI,KAAM,uBAAuB,CACxC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAErB,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,KAAAC,kBAAA,CAAAC,mBAAA,CAAAC,qBAAA,CAAAC,mBAAA,CAAAC,gBAAA,CAAAC,mBAAA,CAAAC,qBAAA,CAAAC,mBAAA,CACrB,KAAM,CAAEC,MAAO,CAAC,CAAGrB,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAsB,QAAQ,CAAGrB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEsB,IAAK,CAAC,CAAG3B,UAAU,CAACO,WAAW,CAAC,CACxC,KAAM,CAAEqB,YAAY,CAAEC,UAAU,CAAEC,YAAY,CAAEC,OAAO,CAAEC,KAAK,CAAEC,YAAa,CAAC,CAAGjC,UAAU,CAACM,WAAW,CAAC,CAExG,KAAM,CAAC4B,SAAS,CAAEC,YAAY,CAAC,CAAGjC,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACkC,OAAO,CAAEC,UAAU,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC8B,KAAK,CAAEM,QAAQ,CAAC,CAAGpC,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACqC,QAAQ,CAAEC,WAAW,CAAC,CAAGtC,QAAQ,CAAC,IAAM,CAC7C,MAAO,CAAAuC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAK,MAAM,CACpD,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,SAAS,CAAGxC,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAACyC,WAAW,CAAEC,cAAc,CAAC,CAAG3C,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAAA4C,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,WAAW,CAAG,CAACR,QAAQ,CAC7BC,WAAW,CAACO,WAAW,CAAC,CACxBN,YAAY,CAACO,OAAO,CAAC,UAAU,CAAED,WAAW,CAAC,CAC7C,GAAIA,WAAW,CAAE,CACfE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CACF,CAAC,CAED;AACApD,SAAS,CAAC,IAAM,CACd,GAAI,CAACwB,MAAM,EAAIA,MAAM,GAAK,WAAW,CAAE,CACrC6B,OAAO,CAACtB,KAAK,CAAC,kBAAkB,CAAEP,MAAM,CAAC,CACzCC,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAAE,CAACD,MAAM,CAAEC,QAAQ,CAAC,CAAC,CAEtB;AACAzB,SAAS,CAAC,IAAM,CACd,GAAI,CAACwB,MAAM,EAAI,CAACE,IAAI,EAAIF,MAAM,GAAK,WAAW,CAAE,OAEhD;AACA,KAAM,CAAA8B,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxClB,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAmB,IAAI,CAAG,KAAM,CAAA5B,YAAY,CAACH,MAAM,CAAC,CACvC,GAAI+B,IAAI,CAAE,CACRrB,YAAY,CAACqB,IAAI,CAAC,CACpB,CACAnB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDkB,qBAAqB,CAAC,CAAC,CAEvB;AACA,KAAM,CAAAE,QAAQ,CAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,GAAK,QAAQ,CAAG,KAAK,CAAG,IAAI,CACrE,KAAM,CAAAG,IAAI,CAAGF,MAAM,CAACC,QAAQ,CAACC,IAAI,CACjC,KAAM,CAAAC,KAAK,CAAG,GAAGJ,QAAQ,MAAMG,IAAI,YAAYnC,MAAM,cAAcE,IAAI,CAACmC,EAAE,EAAE,CAE5E,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,SAAS,CAACH,KAAK,CAAC,CACnClB,SAAS,CAACsB,OAAO,CAAGF,MAAM,CAE1B;AACAA,MAAM,CAACG,gBAAgB,CAAC,MAAM,CAAGC,KAAK,EAAK,CACzCb,OAAO,CAACc,GAAG,CAAC,kCAAkC,CAAC,CAC/CvB,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAAC,CAEF;AACAkB,MAAM,CAACG,gBAAgB,CAAC,SAAS,CAAGC,KAAK,EAAK,CAC5C,GAAI,CACF,KAAM,CAAAX,IAAI,CAAGa,IAAI,CAACC,KAAK,CAACH,KAAK,CAACX,IAAI,CAAC,CACnCF,OAAO,CAACc,GAAG,CAAC,6BAA6B,CAAEZ,IAAI,CAAC,CAChDrB,YAAY,CAACqB,IAAI,CAAC,CACpB,CAAE,MAAOe,GAAG,CAAE,CACZjB,OAAO,CAACtB,KAAK,CAAC,kCAAkC,CAAEuC,GAAG,CAAC,CACxD,CACF,CAAC,CAAC,CAEF;AACAR,MAAM,CAACG,gBAAgB,CAAC,OAAO,CAAGC,KAAK,EAAK,CAC1Cb,OAAO,CAACc,GAAG,CAAC,6BAA6B,CAAC,CAC1CvB,cAAc,CAAC,KAAK,CAAC,CAErB;AACA2B,UAAU,CAAC,IAAM,CACf,GAAI7B,SAAS,CAACsB,OAAO,GAAKF,MAAM,CAAE,CAAE;AAClCT,OAAO,CAACc,GAAG,CAAC,sCAAsC,CAAC,CACnD;AACAvB,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CAEF;AACAkB,MAAM,CAACG,gBAAgB,CAAC,OAAO,CAAGC,KAAK,EAAK,CAC1Cb,OAAO,CAACtB,KAAK,CAAC,kBAAkB,CAAEmC,KAAK,CAAC,CACxC7B,QAAQ,CAAC,4DAA4D,CAAC,CACxE,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACXgB,OAAO,CAACc,GAAG,CAAC,8BAA8B,CAAC,CAC3C,GAAIL,MAAM,CAACU,UAAU,GAAKT,SAAS,CAACU,IAAI,EAAIX,MAAM,CAACU,UAAU,GAAKT,SAAS,CAACW,UAAU,CAAE,CACtFZ,MAAM,CAACa,KAAK,CAAC,CAAC,CAChB,CACAjC,SAAS,CAACsB,OAAO,CAAG,IAAI,CAC1B,CAAC,CACH,CAAC,CAAE,CAACxC,MAAM,CAAEE,IAAI,CAAEC,YAAY,CAAC,CAAC,CAEhC;AACA3B,SAAS,CAAC,IAAM,CACd,GAAI+B,KAAK,CAAE,CACT,KAAM,CAAA6C,KAAK,CAAGL,UAAU,CAAC,IAAM,CAC7BlC,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMwC,YAAY,CAACD,KAAK,CAAC,CAClC,CACF,CAAC,CAAE,CAAC7C,KAAK,CAAC,CAAC,CAEX,KAAM,CAAA+C,eAAe,CAAG,KAAO,CAAAC,MAAM,EAAK,CACxC,GAAI,CAACrD,IAAI,EAAI,CAACO,SAAS,CAAE,OAEzB;AACA,KAAM,CAAA+C,aAAa,CAAG/C,SAAS,CAACgD,OAAO,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACtB,EAAE,GAAKnC,IAAI,CAACmC,EAAE,CAAC,CACnE,GAAI,CAACmB,aAAa,CAAE,OAEpB;AACA,GAAIA,aAAa,CAACI,YAAY,CAAE,CAC9B/C,QAAQ,CAAC,gCAAgC,CAAC,CAC1C,OACF,CAEA;AACA,GAAI2C,aAAa,CAACK,IAAI,GAAKpD,SAAS,CAACqD,YAAY,CAAE,CACjDjD,QAAQ,CAAC,4BAA4B,CAAC,CACtC,OACF,CAEA;AACA,KAAM,CAAAkD,gBAAgB,CAAG,CACvB,GAAGtD,SAAS,CACZuD,KAAK,CAAEvD,SAAS,CAACuD,KAAK,CAACC,GAAG,CAACC,CAAC,EAC1BA,CAAC,CAAC7B,EAAE,GAAKkB,MAAM,CAAG,CAAE,GAAGW,CAAC,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAAGD,CAC/C,CACF,CAAC,CACDxD,YAAY,CAACqD,gBAAgB,CAAC,CAE9B;AACA,KAAM,CAAAK,WAAW,CAAG,KAAM,CAAAhE,UAAU,CAACJ,MAAM,CAAEuD,MAAM,CAAErD,IAAI,CAACmC,EAAE,CAAC,CAC7D,GAAI+B,WAAW,CAAE,CACf;AACA1D,YAAY,CAAC0D,WAAW,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CAACnE,IAAI,EAAI,CAACO,SAAS,CAAE,OAEzB;AACA,KAAM,CAAAsD,gBAAgB,CAAG,CACvB,GAAGtD,SAAS,CACZgD,OAAO,CAAEhD,SAAS,CAACgD,OAAO,CAACQ,GAAG,CAACN,CAAC,EAC9BA,CAAC,CAACtB,EAAE,GAAKnC,IAAI,CAACmC,EAAE,CAAG,CAAE,GAAGsB,CAAC,CAAEC,YAAY,CAAE,IAAK,CAAC,CAAGD,CACpD,CACF,CAAC,CACDjD,YAAY,CAACqD,gBAAgB,CAAC,CAE9B,KAAM,CAAAK,WAAW,CAAG,KAAM,CAAA/D,YAAY,CAACL,MAAM,CAAEE,IAAI,CAACmC,EAAE,CAAC,CACvD,GAAI+B,WAAW,CAAE,CACf1D,YAAY,CAAC0D,WAAW,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACpE,IAAI,EAAI,CAACO,SAAS,CAAE,OAEzB;AACA,KAAM,CAAA+C,aAAa,CAAG/C,SAAS,CAACgD,OAAO,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACtB,EAAE,GAAKnC,IAAI,CAACmC,EAAE,CAAC,CACnE,GAAI,CAACmB,aAAa,CAAE,OAEpB;AACA,GAAIA,aAAa,CAACK,IAAI,GAAKpD,SAAS,CAACqD,YAAY,CAAE,CACjDjD,QAAQ,CAAC,4BAA4B,CAAC,CACtC,OACF,CAEA;AACA,KAAM,CAAA0D,OAAO,CAAG9D,SAAS,CAACqD,YAAY,GAAK,KAAK,CAAG,MAAM,CAAG,KAAK,CACjE,KAAM,CAAAC,gBAAgB,CAAG,CACvB,GAAGtD,SAAS,CACZqD,YAAY,CAAES,OAChB,CAAC,CACD7D,YAAY,CAACqD,gBAAgB,CAAC,CAE9B,KAAM,CAAAK,WAAW,CAAG,KAAM,CAAA9D,OAAO,CAACN,MAAM,CAAEE,IAAI,CAACmC,EAAE,CAAC,CAClD,GAAI+B,WAAW,CAAE,CACf1D,YAAY,CAAC0D,WAAW,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAZ,aAAa,CAAG/C,SAAS,SAATA,SAAS,kBAAAjB,kBAAA,CAATiB,SAAS,CAAEgD,OAAO,UAAAjE,kBAAA,iBAAlBA,kBAAA,CAAoBkE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACtB,EAAE,GAAKnC,IAAI,CAACmC,EAAE,CAAC,CACrE,KAAM,CAAAmC,mBAAmB,CAAG,CAAAhB,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEK,IAAI,KAAKpD,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEqD,YAAY,EAC3E,KAAM,CAAAW,UAAU,CAAG,CAAAhE,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEiE,YAAY,IAAK,IAAI,CAEnD,GAAI/D,OAAO,CAAE,CACX,mBAAOzB,IAAA,QAAKyF,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,iBAAe,CAAK,CAAC,CACvD,CAEA,GAAI,CAACnE,SAAS,CAAE,CACd,mBAAOvB,IAAA,QAAKyF,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,gBAAc,CAAK,CAAC,CACpD,CAEA;AACA,mBACExF,KAAA,CAAAE,SAAA,EAAAsF,QAAA,eACE1F,IAAA,CAACH,MAAM,EACL+B,QAAQ,CAAEA,QAAS,CACnBO,cAAc,CAAEA,cAAe,CAC/BrB,MAAM,CAAEA,MAAO,CAChB,CAAC,cACFZ,KAAA,QAAKuF,SAAS,CAAE,kBAAkB7D,QAAQ,CAAG,WAAW,CAAG,EAAE,EAAG,CAAA8D,QAAA,eAE9D1F,IAAA,QAAKyF,SAAS,CAAE,qBAAqBxD,WAAW,CAAG,WAAW,CAAG,cAAc,EAAG,CAAAyD,QAAA,CAC/EzD,WAAW,cACVjC,IAAA,SAAA0F,QAAA,CAAM,wBAAY,CAAM,CAAC,cAEzB1F,IAAA,SAAA0F,QAAA,CAAM,4BAAgB,CAAM,CAC7B,CACE,CAAC,cAGNxF,KAAA,QAAKuF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BxF,KAAA,OAAAwF,QAAA,EAAI,mBAAiB,CAAC5E,MAAM,EAAK,CAAC,cAClCZ,KAAA,QAAKuF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBxF,KAAA,QAAKuF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBxF,KAAA,QAAKuF,SAAS,CAAE,aAAalE,SAAS,CAACqD,YAAY,GAAK,MAAM,CAAG,cAAc,CAAG,EAAE,EAAG,CAAAc,QAAA,EAAC,aAC3E,CAACnE,SAAS,CAACoE,eAAe,CAAC,aACxC,EAAK,CAAC,cACNzF,KAAA,QAAKuF,SAAS,CAAE,YAAYlE,SAAS,CAACqD,YAAY,GAAK,KAAK,CAAG,cAAc,CAAG,EAAE,EAAG,CAAAc,QAAA,EAAC,YAC1E,CAACnE,SAAS,CAACqE,cAAc,CAAC,aACtC,EAAK,CAAC,EACH,CAAC,CAELrE,SAAS,CAACiE,YAAY,eACrBtF,KAAA,QAAKuF,SAAS,CAAE,UAAUlE,SAAS,CAACiE,YAAY,EAAG,CAAAE,QAAA,EAChDnE,SAAS,CAACiE,YAAY,CAACK,WAAW,CAAC,CAAC,CAAC,aACxC,EAAK,CACN,EACE,CAAC,EACH,CAAC,cAEN7F,IAAA,QAAKyF,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BxF,KAAA,QAAKuF,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAElCxF,KAAA,QAAKuF,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxCxF,KAAA,QAAKuF,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCxF,KAAA,QAAKuF,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B1F,IAAA,OAAA0F,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBxF,KAAA,QAAKuF,SAAS,CAAE,eAAelE,SAAS,CAACqD,YAAY,GAAK,MAAM,CAAG,QAAQ,CAAG,EAAE,EAAG,CAAAc,QAAA,EAChFnE,SAAS,CAACoE,eAAe,CAAC,aAC3B,CAACpE,SAAS,CAACqD,YAAY,GAAK,MAAM,eAAI5E,IAAA,SAAMyF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,EACvF,CAAC,EACH,CAAC,cAEN1F,IAAA,QAAKyF,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BxF,KAAA,OAAAwF,QAAA,EACGnE,SAAS,SAATA,SAAS,kBAAAhB,mBAAA,CAATgB,SAAS,CAAEgD,OAAO,UAAAhE,mBAAA,kBAAAC,qBAAA,CAAlBD,mBAAA,CACGuF,MAAM,CAACrB,CAAC,EAAIA,CAAC,CAACE,IAAI,GAAK,MAAM,CAAC,UAAAnE,qBAAA,iBADjCA,qBAAA,CAEGuE,GAAG,CAACN,CAAC,eACLvE,KAAA,OAAeuF,SAAS,CAAE;AAClD,4BAA4BhB,CAAC,CAACtB,EAAE,IAAKnC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmC,EAAE,EAAG,gBAAgB,CAAG,EAAE;AACrE,4BAA4BsB,CAAC,CAACC,YAAY,CAAG,WAAW,CAAG,EAAE;AAC7D,yBAA0B,CAAAgB,QAAA,EACCjB,CAAC,CAACsB,QAAQ,CACVtB,CAAC,CAACC,YAAY,eAAI1E,IAAA,SAAMyF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,CAC/DjB,CAAC,CAACtB,EAAE,IAAKnC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmC,EAAE,gBAAInD,IAAA,SAAMyF,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,KAAG,CAAM,CAAC,GANrDjB,CAAC,CAACtB,EAOP,CACL,CAAC,CACH,CAAA5B,SAAS,SAATA,SAAS,kBAAAd,mBAAA,CAATc,SAAS,CAAEgD,OAAO,UAAA9D,mBAAA,iBAAlBA,mBAAA,CAAoBqF,MAAM,CAACrB,CAAC,EAAIA,CAAC,CAACE,IAAI,GAAK,MAAM,CAAC,CAACqB,MAAM,IAAK,CAAC,eAC9DhG,IAAA,OAAIyF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAC9C,EACC,CAAC,CACF,CAAC,CAEL,CAAApB,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEK,IAAI,IAAK,MAAM,eAC7BzE,KAAA,QAAKuF,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC1B,CAACpB,aAAa,CAACI,YAAY,EAAI,CAACa,UAAU,eACzCvF,IAAA,WAAQyF,SAAS,CAAC,eAAe,CAACQ,OAAO,CAAEd,kBAAmB,CAAAO,QAAA,CAAC,kBAAgB,CAAQ,CACxF,CAEAJ,mBAAmB,EAAI,CAACC,UAAU,eACjCvF,IAAA,WAAQyF,SAAS,CAAC,cAAc,CAACQ,OAAO,CAAEb,aAAc,CAAAM,QAAA,CAAC,UAAQ,CAAQ,CAC1E,EACE,CACN,EACE,CAAC,cAGN1F,IAAA,QAAKyF,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClC1F,IAAA,CAACF,IAAI,EAACgB,MAAM,CAAEA,MAAO,CAAC6D,IAAI,CAAC,MAAM,CAAE,CAAC,CACjC,CAAC,EACH,CAAC,cAGNzE,KAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B1F,IAAA,QAAKyF,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBnE,SAAS,SAATA,SAAS,kBAAAb,gBAAA,CAATa,SAAS,CAAEuD,KAAK,UAAApE,gBAAA,iBAAhBA,gBAAA,CAAkBqE,GAAG,CAACmB,IAAI,eACzBlG,IAAA,QAEEyF,SAAS,CAAE,aAAaS,IAAI,CAACjB,QAAQ,CAAGiB,IAAI,CAACC,IAAI,CAAG,EAAE,IAAI7B,aAAa,SAAbA,aAAa,WAAbA,aAAa,CAAEI,YAAY,EAAI,CAACwB,IAAI,CAACjB,QAAQ,CAAG,aAAaiB,IAAI,CAACC,IAAI,EAAE,CAAG,EAAE,EAAG,CAC1IF,OAAO,CAAEA,CAAA,GAAM,CAACC,IAAI,CAACjB,QAAQ,EAAI,CAACM,UAAU,EAAInB,eAAe,CAAC8B,IAAI,CAAC/C,EAAE,CAAE,CAAAuC,QAAA,CAExEQ,IAAI,CAACE,IAAI,EAJLF,IAAI,CAAC/C,EAKP,CACN,CAAC,CACC,CAAC,cAENjD,KAAA,QAAKuF,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC3BH,UAAU,eACTvF,IAAA,WAAQyF,SAAS,CAAC,cAAc,CAACQ,OAAO,CAAEA,CAAA,GAAMlD,MAAM,CAACC,QAAQ,CAACqD,IAAI,CAAG,GAAI,CAAAX,QAAA,CAAC,UAAQ,CAAQ,CAC7F,CAEA,CAACrE,KAAK,EAAIC,YAAY,gBAAKtB,IAAA,QAAKyF,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAErE,KAAK,EAAIC,YAAY,CAAM,CAAC,EACrF,CAAC,EACH,CAAC,cAGNpB,KAAA,QAAKuF,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvCxF,KAAA,QAAKuF,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCxF,KAAA,QAAKuF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B1F,IAAA,OAAA0F,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBxF,KAAA,QAAKuF,SAAS,CAAE,eAAelE,SAAS,CAACqD,YAAY,GAAK,KAAK,CAAG,QAAQ,CAAG,EAAE,EAAG,CAAAc,QAAA,EAC/EnE,SAAS,CAACqE,cAAc,CAAC,aAC1B,CAACrE,SAAS,CAACqD,YAAY,GAAK,KAAK,eAAI5E,IAAA,SAAMyF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,EACtF,CAAC,EACH,CAAC,cAEN1F,IAAA,QAAKyF,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BxF,KAAA,OAAAwF,QAAA,EACGnE,SAAS,SAATA,SAAS,kBAAAZ,mBAAA,CAATY,SAAS,CAAEgD,OAAO,UAAA5D,mBAAA,kBAAAC,qBAAA,CAAlBD,mBAAA,CACGmF,MAAM,CAACrB,CAAC,EAAIA,CAAC,CAACE,IAAI,GAAK,KAAK,CAAC,UAAA/D,qBAAA,iBADhCA,qBAAA,CAEGmE,GAAG,CAACN,CAAC,eACLvE,KAAA,OAAeuF,SAAS,CAAE;AAClD,4BAA4BhB,CAAC,CAACtB,EAAE,IAAKnC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmC,EAAE,EAAG,gBAAgB,CAAG,EAAE;AACrE,4BAA4BsB,CAAC,CAACC,YAAY,CAAG,WAAW,CAAG,EAAE;AAC7D,yBAA0B,CAAAgB,QAAA,EACCjB,CAAC,CAACsB,QAAQ,CACVtB,CAAC,CAACC,YAAY,eAAI1E,IAAA,SAAMyF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,CAC/DjB,CAAC,CAACtB,EAAE,IAAKnC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmC,EAAE,gBAAInD,IAAA,SAAMyF,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,KAAG,CAAM,CAAC,GANrDjB,CAAC,CAACtB,EAOP,CACL,CAAC,CACH,CAAA5B,SAAS,SAATA,SAAS,kBAAAV,mBAAA,CAATU,SAAS,CAAEgD,OAAO,UAAA1D,mBAAA,iBAAlBA,mBAAA,CAAoBiF,MAAM,CAACrB,CAAC,EAAIA,CAAC,CAACE,IAAI,GAAK,KAAK,CAAC,CAACqB,MAAM,IAAK,CAAC,eAC7DhG,IAAA,OAAIyF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAC9C,EACC,CAAC,CACF,CAAC,CAEL,CAAApB,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEK,IAAI,IAAK,KAAK,eAC5BzE,KAAA,QAAKuF,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC1B,CAACpB,aAAa,CAACI,YAAY,EAAI,CAACa,UAAU,eACzCvF,IAAA,WAAQyF,SAAS,CAAC,eAAe,CAACQ,OAAO,CAAEd,kBAAmB,CAAAO,QAAA,CAAC,kBAAgB,CAAQ,CACxF,CAEAJ,mBAAmB,EAAI,CAACC,UAAU,eACjCvF,IAAA,WAAQyF,SAAS,CAAC,cAAc,CAACQ,OAAO,CAAEb,aAAc,CAAAM,QAAA,CAAC,UAAQ,CAAQ,CAC1E,EACE,CACN,EACE,CAAC,cAGN1F,IAAA,QAAKyF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjC1F,IAAA,CAACF,IAAI,EAACgB,MAAM,CAAEA,MAAO,CAAC6D,IAAI,CAAC,KAAK,CAAE,CAAC,CAChC,CAAC,EACH,CAAC,EACH,CAAC,CACH,CAAC,EACH,CAAC,EACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAAtE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}