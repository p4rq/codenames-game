{"ast":null,"code":"import React,{createContext,useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export const GameContext=/*#__PURE__*/createContext();// Define API base URL with the /api prefix\nconst API_URL='/api';export const GameProvider=_ref=>{let{children}=_ref;const[error,setError]=useState(null);const[game,setGame]=useState({id:null,cards:[],players:[],current_turn:null,red_cards_left:0,blue_cards_left:0,winning_team:null});const clearError=()=>setError(null);const startNewGame=async(userId,username)=>{try{clearError();console.log(\"Creating game with:\",{userId,username});// Make sure we use /api/game/start not just /game/start\nconst response=await axios.post(`${API_URL}/game/start`,{creator_id:userId,username:username});console.log(\"Server response:\",response.data);// Check for valid response\nif(!response.data||!response.data.id){console.error(\"Invalid game response:\",response.data);setError(\"Server returned an invalid game. Please try again.\");return null;}const newGame=response.data;setGame(newGame);return newGame;}catch(err){var _err$response;console.error(\"Error creating game:\",err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||'Failed to create game. Please try again.');return null;}};// Other methods like getGameState also need the API prefix\nconst getGameState=async gameId=>{try{clearError();const response=await axios.get(`${API_URL}/game/state?id=${gameId}`);return response.data;}catch(err){var _err$response2;console.error(\"Error fetching game state:\",err);setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||'Failed to load game.');return null;}};// Make sure all other API calls use the same prefix\nconst revealCard=async(gameId,cardId,playerId)=>{try{clearError();const response=await axios.post(`${API_URL}/game/reveal`,{game_id:gameId,card_id:cardId,player_id:playerId});return response.data;}catch(err){var _err$response3;console.error(\"Error revealing card:\",err);setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data)||'Failed to reveal card.');return null;}};const setSpymaster=async(gameId,playerId)=>{try{clearError();const response=await axios.post(`${API_URL}/game/set-spymaster?game_id=${gameId}&player_id=${playerId}`);return response.data;}catch(err){var _err$response4;console.error(\"Error setting spymaster:\",err);setError(((_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.data)||'Failed to become spymaster.');return null;}};const endTurn=async(gameId,playerId)=>{try{clearError();const response=await axios.post(`${API_URL}/game/end-turn?game_id=${gameId}&player_id=${playerId}`);return response.data;}catch(err){var _err$response5;console.error(\"Error ending turn:\",err);setError(((_err$response5=err.response)===null||_err$response5===void 0?void 0:_err$response5.data)||'Failed to end turn.');return null;}};const changeTeam=async(gameId,playerId,team)=>{try{clearError();const response=await axios.post(`${API_URL}/game/change-team`,{game_id:gameId,player_id:playerId,team:team});return response.data;}catch(err){var _err$response6;console.error(\"Error changing team:\",err);setError(((_err$response6=err.response)===null||_err$response6===void 0?void 0:_err$response6.data)||'Failed to change team.');return null;}};// Update the provider value\nreturn/*#__PURE__*/_jsx(GameContext.Provider,{value:{game,error,startNewGame,joinExistingGame,getGameState,revealCard,setSpymaster,endTurn,changeTeam// Add this\n},children:children});};","map":{"version":3,"names":["React","createContext","useState","axios","jsx","_jsx","GameContext","API_URL","GameProvider","_ref","children","error","setError","game","setGame","id","cards","players","current_turn","red_cards_left","blue_cards_left","winning_team","clearError","startNewGame","userId","username","console","log","response","post","creator_id","data","newGame","err","_err$response","getGameState","gameId","get","_err$response2","revealCard","cardId","playerId","game_id","card_id","player_id","_err$response3","setSpymaster","_err$response4","endTurn","_err$response5","changeTeam","team","_err$response6","Provider","value","joinExistingGame"],"sources":["C:/Users/anuarbek/codenames-game/frontend/src/context/GameContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const GameContext = createContext();\r\n\r\n// Define API base URL with the /api prefix\r\nconst API_URL = '/api';\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [game, setGame] = useState({\r\n    id: null,\r\n    cards: [],\r\n    players: [],\r\n    current_turn: null,\r\n    red_cards_left: 0,\r\n    blue_cards_left: 0,\r\n    winning_team: null\r\n  });\r\n  \r\n  const clearError = () => setError(null);\r\n\r\n  const startNewGame = async (userId, username) => {\r\n    try {\r\n      clearError();\r\n      console.log(\"Creating game with:\", { userId, username });\r\n      \r\n      // Make sure we use /api/game/start not just /game/start\r\n      const response = await axios.post(`${API_URL}/game/start`, {\r\n        creator_id: userId,\r\n        username: username\r\n      });\r\n      \r\n      console.log(\"Server response:\", response.data);\r\n      \r\n      // Check for valid response\r\n      if (!response.data || !response.data.id) {\r\n        console.error(\"Invalid game response:\", response.data);\r\n        setError(\"Server returned an invalid game. Please try again.\");\r\n        return null;\r\n      }\r\n      \r\n      const newGame = response.data;\r\n      setGame(newGame);\r\n      return newGame;\r\n    } catch (err) {\r\n      console.error(\"Error creating game:\", err);\r\n      setError(err.response?.data || 'Failed to create game. Please try again.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Other methods like getGameState also need the API prefix\r\n  const getGameState = async (gameId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.get(`${API_URL}/game/state?id=${gameId}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Error fetching game state:\", err);\r\n      setError(err.response?.data || 'Failed to load game.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Make sure all other API calls use the same prefix\r\n  const revealCard = async (gameId, cardId, playerId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/reveal`, {\r\n        game_id: gameId,\r\n        card_id: cardId,\r\n        player_id: playerId\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Error revealing card:\", err);\r\n      setError(err.response?.data || 'Failed to reveal card.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const setSpymaster = async (gameId, playerId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/set-spymaster?game_id=${gameId}&player_id=${playerId}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Error setting spymaster:\", err);\r\n      setError(err.response?.data || 'Failed to become spymaster.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const endTurn = async (gameId, playerId) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/end-turn?game_id=${gameId}&player_id=${playerId}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Error ending turn:\", err);\r\n      setError(err.response?.data || 'Failed to end turn.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const changeTeam = async (gameId, playerId, team) => {\r\n    try {\r\n      clearError();\r\n      const response = await axios.post(`${API_URL}/game/change-team`, {\r\n        game_id: gameId,\r\n        player_id: playerId,\r\n        team: team\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Error changing team:\", err);\r\n      setError(err.response?.data || 'Failed to change team.');\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Update the provider value\r\n  return (\r\n    <GameContext.Provider \r\n      value={{ \r\n        game, \r\n        error, \r\n        startNewGame, \r\n        joinExistingGame,\r\n        getGameState, \r\n        revealCard, \r\n        setSpymaster, \r\n        endTurn,\r\n        changeTeam  // Add this\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}